---
import { ClubsPropsAdminPages, decode } from '../index'
import AdminSidebar from './AdminSidebar.astro'
import AdminConfigurationManager from './AdminConfigurationManager.astro'
import AdminThemeCard from './AdminThemeCard.astro'
import Aside from './Aside.vue'
import Clubs from './primitives/Clubs.astro'
import XMark from './icons/x-mark.astro'
import Bars3BottomLeft from './icons/bars-3-bottom-left.astro'

import '../styles'

const { page } = Astro.params
const { clubs } = Astro.props as ClubsPropsAdminPages

const config = decode(clubs.encodedClubsConfiguration)
const { name } = config

const enabledPlugins = clubs.plugins
	.filter((plugin) => plugin.enable === true)
	.filter((plugin) => plugin.name.toUpperCase() !== 'ADMIN')
const currentTheme = clubs.plugins
	.filter((plugin) => plugin.enable === true)
	.find((plugin) => plugin.meta.category === 'theme')

const theme = page && page.startsWith('theme')

const SlotsSidebarBeforeTitle =
	clubs.slots && clubs.slots['sidebar:before-title']
const SlotsAsideAfterBuiltInButtons =
	clubs.slots && clubs.slots['aside:after-built-in-buttons']
---

<!DOCTYPE html>
<html class="dark" lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="preconnect" href="https://fonts.googleapis.com" /><link
			rel="preconnect"
			href="https://fonts.gstatic.com"
			crossorigin
		/><link
			href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;700&family=Poppins:wght@700&family=Syne:wght@700&display=swap"
			rel="stylesheet"
		/>
		<title>{name} | Admin</title>
	</head>

	<body class="font-body bg-dp-blue-grey-300 text-white min-h-screen">
		<div
			class="grid lg:grid-flow-col lg:auto-cols-[18rem_minmax(auto,_1fr)_12rem] gap-20 lg:mr-20"
		>
			<header
				id="__clubs:header__"
				class="hidden z-50 fixed w-full lg:relative grid lg:grid bg-dp-blue-grey-400 gap-16 content-start py-16 px-8 overflow-y-scroll lg:overflow-y-auto max-h-screen lg:max-h-fit min-h-screen"
			>
				<AdminSidebar page={page} name={name} enabledPlugins={enabledPlugins}>
					{
						SlotsSidebarBeforeTitle ? (
							<SlotsSidebarBeforeTitle {...Astro.props} />
						) : (
							<slot name="sidebar:before-title" slot="before-title" />
						)
					}
				</AdminSidebar>
				<button
					id="__clubs:sidebar-close__"
					class="lg:hidden rounded-full fixed -translate-x-1/2 left-1/2 bottom-[3rem] shadow-2xl aspect-square w-14 flex justify-center items-center bg-white text-dp-white-ink"
					><XMark />
				</button>
			</header>
			<main class="container mx-auto px-2 lg:px-0 py-8 lg:py-16">
				<div class="break-words">
					{
						theme ? (
							<div class="grid gap-16">
								<section class="grid gap-16">
									<h2 class="font-title text-2xl font-bold">Theme</h2>
									<AdminThemeCard meta={currentTheme?.meta} />
								</section>
								<h2 class="font-title text-2xl font-bold">
									Theme Configuration
								</h2>
								<slot />
							</div>
						) : (
							<slot />
						)
					}
				</div>
			</main>
			<div class="container mx-auto px-2 lg:px-0 py-8 lg:py-16">
				<Aside config={config} client:only="vue">
					{
						SlotsAsideAfterBuiltInButtons ? (
							<SlotsAsideAfterBuiltInButtons {...Astro.props} />
						) : (
							<slot name="aside:after-built-in-buttons" />
						)
					}
				</Aside>
			</div>

			<!-- Navigation bar for mobile -->
			<div
				id="__clubs:nav-mobile__"
				class="transition-all duration-300 ease-in-out fixed bottom-[3rem] -translate-x-1/2 left-1/2 lg:hidden flex items-stretch gap-6"
			>
				<div
					class="py-4 px-6 rounded-full bg-white shadow-2xl text-dp-white-ink flex items-stretch gap-2"
				>
					<Clubs />
				</div>
				<button
					id="__clubs:sidebar-open__"
					class="rounded-full aspect-square w-14 flex shadow-2xl justify-center items-center bg-white text-dp-white-ink"
					><Bars3BottomLeft />
				</button>
			</div>
			<AdminConfigurationManager {clubs} />
		</div>
	</body>
</html>

<script>
	const header = document.getElementById('__clubs:header__')!
	const navMobile = document.getElementById('__clubs:nav-mobile__')!
	document
		.getElementById('__clubs:sidebar-open__')
		?.addEventListener('click', () => {
			header.classList.toggle('hidden')
		})

	document
		.getElementById('__clubs:sidebar-close__')
		?.addEventListener('click', () => {
			header.classList.toggle('hidden')
		})

	let lastKnownScrollPosition = 0
	let timer: NodeJS.Timeout

	const toggleNavMobile = (scrollPos: number) => {
		const shown = navMobile.classList.contains('nav-mobile--hide') === false
		const update =
			(shown && scrollPos > lastKnownScrollPosition) ||
			(!shown && scrollPos < lastKnownScrollPosition)
		if (update) navMobile.classList.toggle('nav-mobile--hide')
		lastKnownScrollPosition = scrollPos
	}

	const onScroll = () => {
		if (timer) clearTimeout(timer)
		timer = setTimeout(() => toggleNavMobile(window.scrollY), 80)
	}

	const onInit = () => {
		if (window.innerWidth < 1024) {
			document.addEventListener('scroll', onScroll)
		} else {
			document.removeEventListener('scroll', onScroll)
		}
	}

	window.addEventListener('resize', onInit)
	document.addEventListener('DOMContentLoaded', onInit)
</script>

<style>
	.nav-mobile--hide {
		bottom: -5rem;
	}
</style>
