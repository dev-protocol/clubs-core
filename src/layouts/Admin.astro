---
import {
	ClubsPropsAdminPages,
	ClubsSlotName,
	decode,
	ClubsPreferredColorScheme,
	normalizePreferredColorScheme,
} from '../index'
import AdminSidebar from './AdminSidebar.astro'
import AdminConfigurationManager from './AdminConfigurationManager.astro'
import AdminThemeSelector from './AdminThemeSelector.svelte'
import AdminScripts from './AdminScripts.svelte'
import Aside from './Aside.astro'
import Clubs from './primitives/Clubs.astro'
import XMark from './icons/x-mark.astro'
import Bars3BottomLeft from './icons/bars-3-bottom-left.astro'
import Modal from './Modal.astro'

import '../styles'
import ConnectButton from './components/ConnectButton.vue'

type Props = ClubsPropsAdminPages & {
	showAside?: boolean
}

const { page } = Astro.params
const { clubs, showAside = true } = Astro.props

const config = decode(clubs.encodedClubsConfiguration)
const { name, adminPageVisibility } = config

const enabledPlugins = clubs.plugins
	.filter((plugin) => plugin.enable === true)
	.filter((plugin) => plugin.id !== 'clubs-core:admin')
const allThemes = clubs.plugins.filter(
	(plugin) => plugin.meta.category === 'theme'
)

const theme = page && page.startsWith('theme')

let UITheme: ClubsPreferredColorScheme = ClubsPreferredColorScheme.System
if (Astro.cookies.has('theme')) {
	const cookie = Astro.cookies.get('theme')
	UITheme = normalizePreferredColorScheme(cookie?.value)
}

const SlotsBodyBeforeContents = clubs.slots.filter(
	(slot) => slot.slot === ClubsSlotName.AdminBodyBeforeContents
)
const SlotsBodyAfterContents = clubs.slots.filter(
	(slot) => slot.slot === ClubsSlotName.AdminBodyAfterContents
)
const SlotsSidebarBeforeTitle = clubs.slots.filter(
	(slot) => slot.slot === ClubsSlotName.AdminSidebarBeforeTitle
)
const SlotsSidebarBeforeOverviewLink = clubs.slots.filter(
	(slot) => slot.slot === ClubsSlotName.AdminSidebarBeforeOverviewLink
)
const SlotsSidebarBeforeThemeLink = clubs.slots.filter(
	(slot) => slot.slot === ClubsSlotName.AdminSidebarBeforeThemeLink
)
const SlotsSidebarAfterBuiltInPrimaryLinks = clubs.slots.filter(
	(slot) => slot.slot === ClubsSlotName.AdminSidebarAfterBuiltInPrimaryLinks
)
const SlotsAsideAfterBuiltInButtons = clubs.slots.filter(
	(slot) => slot.slot === ClubsSlotName.AdminAsideAfterBuiltInButtons
)
const SlotsModalContent = clubs.slots.filter(
	(slot) => slot.slot === ClubsSlotName.AdminModalCcontent
)
---

<!DOCTYPE html>
<html lang="en" hashi-theme={UITheme}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="preconnect" href="https://fonts.googleapis.com" /><link
			rel="preconnect"
			href="https://fonts.gstatic.com"
			crossorigin
		/><link
			href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;700&family=Poppins:wght@700&family=Syne:wght@700&display=swap"
			rel="stylesheet"
		/>
		<title>{name} | Admin</title>
	</head>

	<body
		class="bg-background min-h-screen font-body text-primary-ink"
		data-page={page}
	>
		<slot name="admin:body:before-contents" />
		{SlotsBodyBeforeContents.map((Slot) => <Slot.component {...Slot.props} />)}

		<div
			id="__clubs:main-container__"
			data-show-content={adminPageVisibility === 'private' ? 'false' : 'true'}
			class="group grid gap-10 lg:mr-20 lg:auto-cols-[18rem_minmax(auto,_1fr)_12rem] lg:grid-flow-col lg:gap-20 data-[show-content=false]:lg:ml-20 data-[show-content=false]:lg:auto-cols-fr data-[show-content=false]:lg:grid-flow-row"
		>
			<header
				id="__clubs:header__"
				class="fixed z-50 grid hidden max-h-screen min-h-screen w-full content-start gap-16 overflow-y-scroll bg-surface-300 px-8 py-16 group-data-[show-content=false]:hidden lg:relative lg:grid lg:max-h-fit lg:overflow-y-auto"
			>
				<AdminSidebar page={page} name={name} enabledPlugins={enabledPlugins}>
					<slot name="admin:sidebar:before-title" slot="before-title" />
					<slot
						name="admin:sidebar:before-overview-link"
						slot="before-overview-link"
					/>
					<slot
						name="admin:sidebar:before-theme-link"
						slot="before-theme-link"
					/>
					<slot
						name="admin:sidebar:after-built-in-primary-links"
						slot="after-built-in-primary-links"
					/>
					{
						SlotsSidebarBeforeTitle.map((Slot) => (
							<Slot.component {...Slot.props} slot="before-title" />
						))
					}
					{
						SlotsSidebarBeforeOverviewLink.map((Slot) => (
							<Slot.component {...Slot.props} slot="before-overview-link" />
						))
					}
					{
						SlotsSidebarBeforeThemeLink.map((Slot) => (
							<Slot.component {...Slot.props} slot="before-theme-link" />
						))
					}
					{
						SlotsSidebarAfterBuiltInPrimaryLinks.map((Slot) => (
							<Slot.component
								{...Slot.props}
								slot="after-built-in-primary-links"
							/>
						))
					}
				</AdminSidebar>
				<button
					id="__clubs:sidebar-close__"
					class="fixed bottom-[3rem] left-1/2 flex aspect-square w-14 -translate-x-1/2 items-center justify-center rounded-full bg-white text-dp-white-ink shadow-2xl lg:hidden"
				>
					<XMark />
				</button>
			</header>
			<main class="container mx-auto px-2 py-8 lg:px-0 lg:py-16">
				<div class="break-words group-data-[show-content=false]:hidden">
					{
						theme ? (
							<div class="grid gap-16">
								<section class="grid gap-16">
									<h2 class="font-title text-2xl font-bold">Theme</h2>
								</section>
								{
									<AdminThemeSelector
										client:load
										encodedConfiguration={clubs.encodedClubsConfiguration}
										themes={allThemes}
									/>
								}
								<h2 class="font-title text-2xl font-bold">
									Theme Configuration
								</h2>
								<slot />
							</div>
						) : (
							<slot />
						)
					}
				</div>
				<div
					id="__clubs:non-admin-message__"
					class="group-data-[show-content=true]:hidden"
				>
				</div>
				<div
					id="__clubs:non-admin-message-loading__"
					role="presentation"
					class="invisible mx-auto mt-16 h-8 w-8 animate-spin rounded-full border-l border-r border-t border-surface-ink group-data-[show-content=true]:hidden"
				>
				</div>
			</main>
			{
				showAside && (
					<div class="container mx-auto max-w-96 px-2 py-8 lg:px-0 lg:py-16">
						<Aside showConnectButton={true}>
							<slot name="clubs:connect-button" slot="aside:connect-button">
								<ConnectButton client:load chainId={config.chainId} />
							</slot>
							<slot name="admin:aside:after-built-in-buttons" />
							{SlotsAsideAfterBuiltInButtons.map((Slot) => (
								<Slot.component {...Slot.props} />
							))}
						</Aside>
					</div>
				)
			}

			<!-- Navigation bar for mobile -->
			<div
				id="__clubs:nav-mobile__"
				class="fixed bottom-[3rem] left-1/2 flex -translate-x-1/2 items-stretch gap-6 transition-all duration-300 ease-in-out lg:hidden"
			>
				<div
					class="flex items-stretch gap-2 rounded-full bg-white px-6 py-4 text-dp-white-ink shadow-2xl"
				>
					<Clubs />
				</div>
				<button
					id="__clubs:sidebar-open__"
					class="flex aspect-square w-14 items-center justify-center rounded-full bg-white text-dp-white-ink shadow-2xl group-data-[show-content=false]:hidden"
					><Bars3BottomLeft />
				</button>
			</div>
			<AdminConfigurationManager {clubs} />
		</div>
		<Modal>
			<slot name="admin:modal:content" />
			{SlotsModalContent.map((Slot) => <Slot.component {...Slot.props} />)}
		</Modal>

		<slot name="admin:body:after-contents" />
		{SlotsBodyAfterContents.map((Slot) => <Slot.component {...Slot.props} />)}

		<AdminScripts
			client:only="svelte"
			encodedClubsConfiguration={clubs.encodedClubsConfiguration}
		/>
	</body>

	<style>
		.nav-mobile--hide {
			bottom: -5rem;
		}
	</style>
</html>
