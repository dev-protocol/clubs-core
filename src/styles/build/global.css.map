{"version":3,"sourceRoot":"","sources":["global.scss","../../node_modules/@devprotocol/hashi/_init-font-pack.scss","../../node_modules/@devprotocol/hashi/_init-base.scss","../../node_modules/@matteusan/sentro/core/_tokens.scss","../../node_modules/@devprotocol/hashi/hs-core/theme/_theme-properties.scss","../../node_modules/@devprotocol/hashi/hs-button/_button-base.scss","../../node_modules/@devprotocol/hashi/hs-core/tools/_prefix.scss","../../node_modules/@matteusan/sentro/tools/_prefix.scss","../../node_modules/@matteusan/sentro/core/_keys.scss","../../node_modules/@devprotocol/hashi/hs-button/_button-styles.scss","../../node_modules/@devprotocol/hashi/hs-button-group/_button-group-styles.scss","../../node_modules/@devprotocol/hashi/hs-link/_link-styles.scss","../../node_modules/@devprotocol/hashi/hs-form-field/_form-field-base.scss","../../node_modules/@devprotocol/hashi/hs-form-field/_form-field-styles.scss","../../node_modules/@devprotocol/hashi/hs-select-field/_select-field-base.scss","../../node_modules/@devprotocol/hashi/hs-select-field/_select-field-styles.scss","../../node_modules/@devprotocol/hashi/hs-tick-field/_tick-field-base.scss","../../node_modules/@devprotocol/hashi/hs-wallet/_wallet-base.scss","../../node_modules/@matteusan/sentro/core/_breakpoints.scss","../../node_modules/@devprotocol/hashi/hs-utils/_typography-utils.scss"],"names":[],"mappings":"AA2BQ;ACMI;AAMA;ACwJV;EC7IA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EDkRE;EACA;;;AAyEF;AAAA;AAAA;EAGE;EACA;EACA;EACA;;;AAIF;AAAA;AAAA;AAAA;AAAA;AAAA;EAME;EACA;EACA;EACA;;;AAGF;AAAA;AAAA;EAGE;EACA;EACA;EACA;;;AAGF;EACE;;;AAGF;EACE;;;AAGF;EACE;EACA;EACA;EACA;;;AAGF;AAAA;EAEE;EACA;EACA;EACA;;;AAGF;EACE;;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAmHD;EACC;IACC;ICnhBH;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;;ADukBC;EAIK;EC3kBN;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;;AHpBD;EACC;EACA;;;AIQA;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;ACNF;EACE;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;;ACxBJ;ECmDI,oBFvBoC;EE0BtC,YF1BsC;;ADbxC;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AC8DE;ED9DF;EAAA;EAAA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EAII;;AAJJ;EAII;;AAJJ;EAII;;AK4NF;EDlLF;EAAA;EAAA;ECsLI;;AJjNA;EACE;EACA;;AAIJ;EACE;;AAGF;EACE;EACA;AAGA;;ADlCJ;EAII;;AAJJ;EAII;;AC+BA;EACE;EACA;;AAGF;AAGE;;AD3CN;EAII;;AAJJ;EAII;;ACwCE;EACE;EACA;;AAKN;EACE;;ADpDJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;ACuDA;EACE;EACA;;;AKvBN;EACE;EACA;EACA;;AAEA;AAAA;EAEE;EACA;EACA;;AN/CJ;AAAA;EI8CA;;AJ9CA;AAAA;EI8CA;;AJ9CA;AAAA;EI8CA;;AEgBE;EFhBF;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AEwBI;EACE;;ANvEN;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;;AGtDA;EACE;;APOF;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AF7DA;ECmDI,oBIZkC;EJepC,YIfoC;;;AClCtC;EACE;EACA;EACA;EACA;EACA;EACA;;ARIF;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;ASyCA;EACE;;AP7DN;ECmDI,oBMYoC;ENZpC,iBMYoC;ENTtC,YMSsC;;AP/DxC;ECmDI,oBMaoC;ENVtC,YMUsC;;ATjDxC;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EI8CA;;AJ9CA;EAII;;AAJJ;EAII;;AAJJ;EAII;;ASuEA;EACE;EACA;EACA;;AT9EN;EAII;;AAJJ;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AK4DI;EACE;;AT3GN;EAII;;AAJJ;EAII;;AAJJ;EAII;;AQMF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;AAEA;EACE;;AAIJ;EACE;EACA;;AR/BN;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;;AUnBJ;EACE;EACA;EACA;EACA;EACA;;AC0CA;EACE;;AXjCJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AW0CA;EACE;;AT9DN;ECmDI,oBQaoC;ERbpC,iBQaoC;ERVtC,YQUsC;;AThExC;ECmDI,oBQcoC;ERXtC,YQWsC;;AXlDxC;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EI8CA;;AJ9CA;EAII;;AAJJ;EAII;;AAJJ;EAII;;AWwEA;EACE;EACA;EACA;;AX/EN;EAII;;AAJJ;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AO0DI;EACE;;AAIJ;EACE;EACA;EACA;;ADtHF;EACE;EACA;;AVIJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AUEF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;AVlBN;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;;AYnBJ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AZQF;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EI8CA;;AJ9CA;EAII;;AAJJ;EI8CA;;AJ9CA;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AYEF;EACE;EACA;EACA;;AZTJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EI8CA;;AJ9CA;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AY4BF;EACE;EACA;;;ACxCJ;EACE;EACA;EACA;EACA;EACA;EACA;;AbAF;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AShCE;ETgCF;;AS9BI;EACE;;AAKF;ETwBJ;;ASrBM;EACE;EACA;EACA;;AAIA;ETcR;;ASRI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AX9DN;ECmDI,oBUYsC;EVTxC,YUSwC;;AbhD1C;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AAJJ;EAII;;AcsEJ;EDpCI;IAgCI;ITxBR;;;AS4BM;EACE;;AAGF;EACE;;;AjB5ET;EACC;EACA;EACA;;AAEA;EACC;EACA;EACA;;AAGD;EACC;EACA;EACA;EACA;;AAGD;EACC;EACA;EACA;EACA;EACA;;AI1BD;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;;AJ9CA;EI8CA;;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;AJ9CA;EI8CA;;;AWMI;EACE;EACA;EACA;EACA;;;ADkBN;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;AAbN;EACE;EACA;EACA;EACA;;;ADkBN;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;AAbN;EACE;EACA;EACA;EACA;;;ADkBN;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;AAbN;EACE;EACA;EACA;EACA;;;ADkBN;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;AAbN;EACE;EACA;EACA;EACA;;;ADkBN;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;AAbN;EACE;EACA;EACA;EACA;;;ADkBN;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;ADSV;ECbQ;IACE;IACA;IACA;IACA;;;AASN;EACE;;;ADDN;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;AAPN;EACE;;;ADDN;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;AAPN;EACE;;;ADDN;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;AAPN;EACE;;;ADDN;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;AAPN;EACE;;;ADDN;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;AAPN;EACE;;;ADDN;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE;;;ADPV;ECMQ;IACE","file":"global.css","sourcesContent":["@use './clubs.theme' as clubs;\n@use '@devprotocol/hashi' with (\n\t$theme: clubs.$theme\n);\n@use '@devprotocol/hashi/hs-button' with (\n\t$theme: clubs.$button-theme\n);\n@use '@devprotocol/hashi/hs-button-group';\n@use '@devprotocol/hashi/hs-form-field' with (\n\t$theme: clubs.$form-field-theme\n);\n@use '@devprotocol/hashi/hs-select-field' with (\n\t$theme: clubs.$select-field-theme\n);\n@use '@devprotocol/hashi/hs-card';\n@use '@devprotocol/hashi/hs-link' with (\n\t$theme: clubs.$link-theme\n);\n@use '@devprotocol/hashi/hs-tick-field' with (\n\t$theme: clubs.$tick-field-theme\n);\n@use '@devprotocol/hashi/hs-wallet' with (\n\t$theme: clubs.$wallet-theme\n);\n@use '@devprotocol/hashi/hs-utils';\n@use './clubs.variants' as clb-variants;\n\n@import url('https://fonts.googleapis.com/css2?family=Bodoni+Moda:opsz@6..96&family=DM+Sans:wght@400;700&family=Syne:wght@500;700;800&display=swap');\n\n@include hashi.init() {\n\tbody {\n\t\tscrollbar-width: thin !important;\n\t\tscrollbar-color: rgba(255 255 255 / 50%) rgba(0 0 0 / 30%) !important;\n\t}\n\t@include hs-button.render();\n\t@include hs-button-group.render();\n\t// @include hs-card.render();\n\t@include hs-link.render();\n\t@include hs-form-field.render();\n\t@include hs-select-field.render();\n\t@include hs-tick-field.render();\n\t@include hs-wallet.render();\n\n\t.clb-tier {\n\t\tdisplay: grid;\n\t\tjustify-items: start;\n\t\tgap: hashi.primitive-token-get('padding.sm');\n\n\t\t.clb-tier__media {\n\t\t\twidth: 100%;\n\t\t\theight: auto;\n\t\t\tborder-radius: hashi.token-get('radius-medium');\n\t\t}\n\n\t\t.clb-tier__title {\n\t\t\tfont-family: hashi.token-get('title-family');\n\t\t\tfont-size: hashi.token-get('subtitle-size');\n\t\t\tfont-weight: hashi.primitive-token-get('weight.bold');\n\t\t\tline-height: hashi.primitive-token-get('line-height.condensed');\n\t\t}\n\n\t\t.clb-tier__subtitle {\n\t\t\tfont-family: hashi.token-get('subtitle-family');\n\t\t\tfont-size: hashi.token-get('body-size');\n\t\t\tfont-weight: hashi.primitive-token-get('weight.normal');\n\t\t\tline-height: hashi.primitive-token-get('line-height.condensed');\n\t\t\ttext-transform: uppercase;\n\t\t}\n\n\t\t.clb-tier__actions {\n\t\t\t//\n\t\t}\n\t}\n\n\t@include clb-variants.render();\n\n\t@include hs-utils.typography(\n\t\t$include: (\n\t\t\t'preset',\n\t\t\t'family',\n\t\t)\n\t);\n}\n","///\n//  Copyright (c) 2023 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use 'sass:map';\n\n@mixin load($families) {\n  $supertitle: map.get($families, 'supertitle');\n  $title: map.get($families, 'title');\n  $subtitle: map.get($families, 'subtitle');\n  $body: map.get($families, 'body');\n  $mono: map.get($families, 'mono');\n  $small: map.get($families, 'small');\n\n  @if $body == ('DM Sans', sans-serif) or $small == ('DM Sans', sans-serif) {\n    @import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,200;0,9..40,400;0,9..40,700;0,9..40,1000;1,9..40,200;1,9..40,400;1,9..40,700;1,9..40,1000&display=swap');\n  }\n\n  @if $supertitle == ('Syne', sans-serif)\n    or $title == ('Syne', sans-serif)\n    or $subtitle == ('Syne', sans-serif) {\n    @import url('https://fonts.googleapis.com/css2?family=Syne:wght@400;600;700;800&display=swap');\n\n  }\n\n  @if $mono == ('IBM Plex Mono', sans-serif) {\n    @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,200;0,400;0,700;1,200;1,400;1,700&display=swap');\n  }\n}","//\n//  Copyright (c) 2023 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n//\n\n@use 'hs-core';\n@use 'hs-core/tokens';\n\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:selector';\n@use 'sass:string';\n@use 'sass:color';\n\n@use 'init-font-pack' as font-pack;\n\n$_valid-dark-modes: ('attribute', 'media', 'class', 'auto');\n\n$primary: 'dp-black' !default;\n$primary-dark: 'dp-white' !default;\n$accent: 'native-blue' !default;\n$accent-dark: $accent !default;\n$surface: 'dp-white' !default;\n$surface-dark: 'dp-blue-grey' !default;\n$error: 'dp-red' !default;\n$error-dark: $error !default;\n\n$radius-small: 'sm' !default;\n$radius-medium: 'md' !default;\n$radius-large: 'lg' !default;\n\n$supertitle: () !default;\n$title: () !default;\n$subtitle: () !default;\n$body: () !default;\n$mono: () !default;\n$small: () !default;\n\n$background: 'dp-white.200' !default;\n$background-dark: 'dp-blue-grey.600' !default;\n$background-ink: 'dp-white.ink' !default;\n$background-dark-ink: 'dp-blue-grey.ink' !default;\n$breakpoints: () !default;\n$_init-breakpoints: (\n  'small': 320px,\n  'medium': 640px,\n  'large': 960px,\n  'xlarge': 1280px,\n);\n\n$dark-mode: 'attribute' !default;\n$extend: () !default;\n$theme: () !default;\n\n$_primary: hs-core.prioritize(map.get($theme, 'primary'), $primary);\n$_primary-dark: hs-core.prioritize(map.get($theme, 'primary-dark'), $primary-dark);\n$_accent: hs-core.prioritize(map.get($theme, 'accent'), $accent);\n$_accent-dark: hs-core.prioritize(map.get($theme, 'accent-dark'), $accent-dark);\n$_surface: hs-core.prioritize(map.get($theme, 'surface'), $surface);\n$_surface-dark: hs-core.prioritize(map.get($theme, 'surface-dark'), $surface-dark);\n$_error: hs-core.prioritize(map.get($theme, 'error'), $error);\n$_error-dark: hs-core.prioritize(map.get($theme, 'error-dark'), $error-dark);\n\n$_background: hs-core.prioritize(map.get($theme, 'background'), $background);\n$_background-dark: hs-core.prioritize(map.get($theme, 'background-dark'), $background-dark);\n$_background-ink: hs-core.prioritize(map.get($theme, 'background-ink'), $background-ink);\n$_background-dark-ink: hs-core.prioritize(map.get($theme, 'background-dark-ink'), $background-dark-ink);\n\n$_radius-small: hs-core.prioritize(map.get($theme, 'radius-small'), $radius-small);\n$_radius-medium: hs-core.prioritize(map.get($theme, 'radius-medium'), $radius-medium);\n$_radius-large: hs-core.prioritize(map.get($theme, 'radius-large'), $radius-large);\n\n$_supertitle: hs-core.prioritize(map.get($theme, 'supertitle'), $supertitle);\n$_title: hs-core.prioritize(map.get($theme, 'title'), $title);\n$_subtitle: hs-core.prioritize(map.get($theme, 'subtitle'), $subtitle);\n$_body: hs-core.prioritize(map.get($theme, 'body'), $body);\n$_mono: hs-core.prioritize(map.get($theme, 'mono'), $mono);\n$_small: hs-core.prioritize(map.get($theme, 'small'), $small);\n\n$_dark-mode: hs-core.prioritize(map.get($theme, 'dark-mode'), $dark-mode);\n$_extend: hs-core.prioritize(map.get($theme, 'extend'), $extend);\n$_breakpoints: hs-core.prioritize(map.get($theme, 'breakpoints'), $breakpoints);\n\n$_tones: (\n  200: 8%,\n  300: 12%,\n  400: 20%,\n  600: 33%\n);\n\n@if not list.index($_valid-dark-modes, $_dark-mode) {\n  @error \"Invalid dark mode: #{$_dark-mode}. Please use one of the following dark modes: #{$_valid-dark-modes}.\";\n}\n\n/// Duplicate dark mode mixin (current viable workaround as of now).\n/// @access public\n@mixin dark-mode {\n  @if not list.index($_valid-dark-modes, $_dark-mode) {\n    @error \"Invalid dark mode: #{$dark-mode}. Please use one of the following dark modes: #{$_valid-dark-modes}.\";\n  }\n\n  @if $_dark-mode == 'media' {\n    @media (prefers-color-scheme: dark) {\n      @content;\n    }\n  }\n\n  @if $_dark-mode == 'attribute' {\n    @at-root #{selector.nest('html[hashi-theme=\"dark\"], html[data-theme=\"dark\"], html[theme=\"dark\"]', &)} {\n      @content;\n    }\n  }\n\n  @if $_dark-mode == 'class' {\n    @at-root #{selector.nest('html.is-dark', &)} {\n      @content;\n    }\n  }\n\n  @if $_dark-mode == 'auto' {\n    @at-root #{selector.nest('html[hashi-theme=\"dark\"], html[data-theme=\"dark\"], html[theme=\"dark\"], html.is-dark', &)} {\n      @content;\n    }\n\n    @media (prefers-color-scheme: dark) {\n      @at-root #{selector.nest('html:not([hashi-theme=\"light\"]):not([data-theme=\"light\"]):not([theme=\"light\"]):not(.is-light)', &)} {\n        @content;\n      }\n    }\n  }\n}\n\n@mixin init {\n  /// itp = initial typography presets\n  /// @access private\n  $_itp: (\n    'supertitle': (\n      family: ('Syne', sans-serif),\n      size: '2xl',\n      weight: 900,\n      line-height: 'normal'\n    ),\n    'title': (\n      family: ('Syne', sans-serif),\n      size: 'xl',\n      weight: 700,\n      line-height: 'normal'\n    ),\n    'subtitle': (\n      family: ('Syne', sans-serif),\n      size: 'lg',\n      weight: 700,\n      line-height: 'normal'\n    ),\n    'body': (\n      family: ('DM Sans', sans-serif),\n      size: 'sm',\n      weight: 400,\n      line-height: 'normal'\n    ),\n    'mono': (\n      family: ('IBM Plex Mono', monospace),\n      size: 'sm',\n      weight: 400,\n      line-height: 'normal'\n    ),\n    'small': (\n      family: ('DM Sans', sans-serif),\n      size: 'xs',\n      weight: 200,\n      line-height: 'normal'\n    )\n  );\n\n  :root {\n    @include hs-core.token-config($map: $_extend);\n    @include hs-core.token-config(\n      $primary: (\n        200: _get-color($_primary, 200),\n        300: _get-color($_primary, 300),\n        400: _get-color($_primary, 400),\n        600: _get-color($_primary, 600),\n        'ink': _get-color($_primary, 'ink'),\n        'dark': (\n          200: _get-color($_primary-dark, 200),\n          300: _get-color($_primary-dark, 300),\n          400: _get-color($_primary-dark, 400),\n          600: _get-color($_primary-dark, 600),\n          'ink': _get-color($_primary-dark, 'ink')\n        ),\n      ),\n      $accent: (\n        200: _get-color($_accent, 200),\n        300: _get-color($_accent, 300),\n        400: _get-color($_accent, 400),\n        600: _get-color($_accent, 600),\n        'ink': _get-color($_accent, 'ink'),\n        'dark': (\n          200: _get-color($_accent-dark, 200),\n          300: _get-color($_accent-dark, 300),\n          400: _get-color($_accent-dark, 400),\n          600: _get-color($_accent-dark, 600),\n          'ink': _get-color($_accent-dark, 'ink')\n        ),\n      ),\n      $surface: (\n        200: _get-color($_surface, 200),\n        300: _get-color($_surface, 300),\n        400: _get-color($_surface, 400),\n        600: _get-color($_surface, 600),\n        'ink': _get-color($_surface, 'ink'),\n        'dark': (\n          200: _get-color($_surface-dark, 200),\n          300: _get-color($_surface-dark, 300),\n          400: _get-color($_surface-dark, 400),\n          600: _get-color($_surface-dark, 600),\n          'ink': _get-color($_surface-dark, 'ink')\n        ),\n      ),\n      $error: (\n        200: _get-color($_error, 200),\n        300: _get-color($_error, 300),\n        400: _get-color($_error, 400),\n        600: _get-color($_error, 600),\n        'ink': _get-color($_error, 'ink'),\n        'dark': (\n          200: _get-color($_error-dark, 200),\n          300: _get-color($_error-dark, 300),\n          400: _get-color($_error-dark, 400),\n          600: _get-color($_error-dark, 600),\n          'ink': _get-color($_error-dark, 'ink')\n        ),\n      ),\n      $disabled: (\n        'default': hs-core.primitive-token-get('dp-black-alpha.default'),\n        'ink': hs-core.primitive-token-get('dp-black-alpha.ink')\n      ),\n      $background: (\n        'default': hs-core.token-switch($_background, hs-core.primitive-token-switch($_background)),\n        'ink': hs-core.token-switch($_background-ink, hs-core.primitive-token-switch($_background-ink)),\n        'dark': (\n          'default': hs-core.primitive-token-get($_background-dark),\n          'ink': hs-core.primitive-token-get($_background-dark-ink),\n        ),\n      ),\n      $radius: (\n        'small': hs-core.primitive-token-switch('radius.#{$_radius-small}', $_radius-small),\n        'medium': hs-core.primitive-token-switch('radius.#{$_radius-medium}', $_radius-medium),\n        'large': hs-core.primitive-token-switch('radius.#{$_radius-large}', $_radius-large),\n      ),\n      $supertitle: (\n        'family': _get-family(map.merge(map.get($_itp, 'supertitle'), $_supertitle)),\n        'size': _get-size(map.merge(map.get($_itp, 'supertitle'), $_supertitle)),\n        'weight': _get-weight(map.merge(map.get($_itp, 'supertitle'), $_supertitle)),\n        'line-height': _get-line-height(map.merge(map.get($_itp, 'supertitle'), $_supertitle)),\n      ),\n      $title: (\n        'family': _get-family(map.merge(map.get($_itp, 'title'), $_title)),\n        'size': _get-size(map.merge(map.get($_itp, 'title'), $_title)),\n        'weight': _get-weight(map.merge(map.get($_itp, 'title'), $_title)),\n        'line-height': _get-line-height(map.merge(map.get($_itp, 'title'), $_title)),\n      ),\n      $subtitle: (\n        'family': _get-family(map.merge(map.get($_itp, 'subtitle'), $_subtitle)),\n        'size': _get-size(map.merge(map.get($_itp, 'subtitle'), $_subtitle)),\n        'weight': _get-weight(map.merge(map.get($_itp, 'subtitle'), $_subtitle)),\n        'line-height': _get-line-height(map.merge(map.get($_itp, 'subtitle'), $_subtitle)),\n      ),\n      $body: (\n        'family': _get-family(map.merge(map.get($_itp, 'body'), $_body)),\n        'size': _get-size(map.merge(map.get($_itp, 'body'), $_body)),\n        'weight': _get-weight(map.merge(map.get($_itp, 'body'), $_body)),\n        'line-height': _get-line-height(map.merge(map.get($_itp, 'body'), $_body)),\n      ),\n      $mono: (\n        'family': _get-family(map.merge(map.get($_itp, 'mono'), $_mono)),\n        'size': _get-size(map.merge(map.get($_itp, 'mono'), $_mono)),\n        'weight': _get-weight(map.merge(map.get($_itp, 'mono'), $_mono)),\n        line-height: _get-line-height(map.merge(map.get($_itp, 'mono'), $_mono)),\n      ),\n      $small: (\n        'family': _get-family(map.merge(map.get($_itp, 'small'), $_small)),\n        'size': _get-size(map.merge(map.get($_itp, 'small'), $_small)),\n        'weight': _get-weight(map.merge(map.get($_itp, 'small'), $_small)),\n        'line-height': _get-line-height(map.merge(map.get($_itp, 'small'), $_small)),\n      ),\n    );\n    @include hs-core.token-config(\n      $primary-alpha: (\n        200: rgba(_raw('primary-200'), 8%),\n        300: rgba(_raw('primary-300'), 12%),\n        400: rgba(_raw('primary-400'), 20%),\n        600: rgba(_raw('primary-600'), 33%)\n      ),\n      $accent-alpha: (\n        200: rgba(_raw('accent-200'), 8%),\n        300: rgba(_raw('accent-300'), 12%),\n        400: rgba(_raw('accent-400'), 20%),\n        600: rgba(_raw('accent-600'), 33%)\n      ),\n      $surface-alpha: (\n        200: rgba(_raw('surface-200'), 8%),\n        300: rgba(_raw('surface-300'), 12%),\n        400: rgba(_raw('surface-400'), 20%),\n        600: rgba(_raw('surface-600'), 33%)\n      ),\n    );\n    --hs-transition-time: 0.2s;\n    --hs-shadow-color: #{rgba(#000, 15%)};\n  }\n\n  @include hs-core.breakpoint-config(\n    $map: map.merge($_init-breakpoints, $_breakpoints)\n  );\n\n  @include font-pack.load((\n    'supertitle': _get-family(map.merge(map.get($_itp, 'supertitle'), $_supertitle)),\n    'title': _get-family(map.merge(map.get($_itp, 'title'), $_title)),\n    'subtitle': _get-family(map.merge(map.get($_itp, 'subtitle'), $_subtitle)),\n    'body': _get-family(map.merge(map.get($_itp, 'body'), $_body)),\n    'mono': _get-family(map.merge(map.get($_itp, 'mono'), $_mono)),\n    'small': _get-family(map.merge(map.get($_itp, 'small'), $_small)),\n  ));\n\n  @if $_dark-mode == 'media' {\n    @media (prefers-color-scheme: dark) {\n      :root {\n        color-scheme: dark;\n        @include hs-core.token-config(\n          $primary: (\n            200: hs-core.token-get('primary-dark-200'),\n            300: hs-core.token-get('primary-dark-300'),\n            400: hs-core.token-get('primary-dark-400'),\n            600: hs-core.token-get('primary-dark-600'),\n            'ink': hs-core.token-get('primary-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('primary-dark-200'), 8%),\n              300: rgba(_raw('primary-dark-300'), 12%),\n              400: rgba(_raw('primary-dark-400'), 20%),\n              600: rgba(_raw('primary-dark-600'), 33%)\n            ),\n          ),\n          $accent: (\n            200: hs-core.token-get('accent-dark-200'),\n            300: hs-core.token-get('accent-dark-300'),\n            400: hs-core.token-get('accent-dark-400'),\n            600: hs-core.token-get('accent-dark-600'),\n            'ink': hs-core.token-get('accent-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('accent-dark-200'), 8%),\n              300: rgba(_raw('accent-dark-300'), 12%),\n              400: rgba(_raw('accent-dark-400'), 20%),\n              600: rgba(_raw('accent-dark-600'), 33%)\n            ),\n          ),\n          $surface: (\n            200: hs-core.token-get('surface-dark-200'),\n            300: hs-core.token-get('surface-dark-300'),\n            400: hs-core.token-get('surface-dark-400'),\n            600: hs-core.token-get('surface-dark-600'),\n            'ink': hs-core.token-get('surface-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('surface-dark-200'), 8%),\n              300: rgba(_raw('surface-dark-300'), 12%),\n              400: rgba(_raw('surface-dark-400'), 20%),\n              600: rgba(_raw('surface-dark-600'), 33%)\n            ),\n          ),\n          $disabled: (\n            'default': hs-core.primitive-token-get('dp-white-alpha.default'),\n            'ink': hs-core.primitive-token-get('dp-white-alpha.ink'),\n          ),\n          $background: (\n            'default': hs-core.token-get('background-dark'),\n            'ink': hs-core.token-get('background-dark-ink'),\n          ),\n        );\n      }\n    }\n  }\n\n  *,\n  :before,\n  :after {\n    margin: 0;\n    padding: 0;\n    color: inherit;\n    box-sizing: inherit;\n    // border: 1px solid rgba(0 0 0 / 0);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n  }\n\n  p,\n  span,\n  a {\n    font-family: hs-core.token-get('body-family');\n    font-size: hs-core.token-get('body-size');\n    font-weight: hs-core.token-get('body-weight');\n    line-height: hs-core.token-get('body-line-height');\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  li {\n    list-style: none;\n  }\n\n  small {\n    font-family: hs-core.token-get('small-family');\n    font-size: hs-core.token-get('small-size');\n    font-weight: hs-core.token-get('small-weight');\n    line-height: hs-core.token-get('small-line-height');\n  }\n\n  code,\n  code * {\n    font-family: hs-core.token-get('mono-family');\n    font-size: hs-core.token-get('mono-size');\n    font-weight: hs-core.token-get('mono-weight');\n    line-height: hs-core.token-get('mono-line-height');\n  }\n\n  dialog {\n    all: unset;\n  }\n\n  html {\n    width: 100%;\n    height: 100%;\n    font-size: 100%;\n    background: hs-core.token-get('background');\n    color: hs-core.token-get('background-ink');\n    font-family: hs-core.token-get('body-family');\n    box-sizing: border-box;\n    color-scheme: light;\n\n    @if $_dark-mode == 'class' {\n      &.is-dark {\n        color-scheme: dark;\n        @include hs-core.token-config(\n          $primary: (\n            200: hs-core.token-get('primary-dark-200'),\n            300: hs-core.token-get('primary-dark-300'),\n            400: hs-core.token-get('primary-dark-400'),\n            600: hs-core.token-get('primary-dark-600'),\n            'ink': hs-core.token-get('primary-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('primary-dark-200'), 8%),\n              300: rgba(_raw('primary-dark-300'), 12%),\n              400: rgba(_raw('primary-dark-400'), 20%),\n              600: rgba(_raw('primary-dark-600'), 33%)\n            ),\n          ),\n          $accent: (\n            200: hs-core.token-get('accent-dark-200'),\n            300: hs-core.token-get('accent-dark-300'),\n            400: hs-core.token-get('accent-dark-400'),\n            600: hs-core.token-get('accent-dark-600'),\n            'ink': hs-core.token-get('accent-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('accent-dark-200'), 8%),\n              300: rgba(_raw('accent-dark-300'), 12%),\n              400: rgba(_raw('accent-dark-400'), 20%),\n              600: rgba(_raw('accent-dark-600'), 33%)\n            ),\n          ),\n          $surface: (\n            200: hs-core.token-get('surface-dark-200'),\n            300: hs-core.token-get('surface-dark-300'),\n            400: hs-core.token-get('surface-dark-400'),\n            600: hs-core.token-get('surface-dark-600'),\n            'ink': hs-core.token-get('surface-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('surface-dark-200'), 8%),\n              300: rgba(_raw('surface-dark-300'), 12%),\n              400: rgba(_raw('surface-dark-400'), 20%),\n              600: rgba(_raw('surface-dark-600'), 33%)\n            ),\n          ),\n          $disabled: (\n            'default': hs-core.primitive-token-get('dp-white-alpha'),\n            'ink': hs-core.primitive-token-get('dp-white-alpha.ink')\n          ),\n          $background: (\n            'default': hs-core.token-get('background-dark'),\n            'ink': hs-core.token-get('background-dark-ink'),\n          ),\n        );\n      }\n    }\n\n    @if $_dark-mode == 'attribute' {\n      &[hashi-theme='dark'],\n      &[theme='dark'],\n      &[data-theme='dark'] {\n        color-scheme: dark;\n        @include hs-core.token-config(\n          $primary: (\n            200: hs-core.token-get('primary-dark-200'),\n            300: hs-core.token-get('primary-dark-300'),\n            400: hs-core.token-get('primary-dark-400'),\n            600: hs-core.token-get('primary-dark-600'),\n            'ink': hs-core.token-get('primary-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('primary-dark-200'), 8%),\n              300: rgba(_raw('primary-dark-300'), 12%),\n              400: rgba(_raw('primary-dark-400'), 20%),\n              600: rgba(_raw('primary-dark-600'), 33%)\n            ),\n          ),\n          $accent: (\n            200: hs-core.token-get('accent-dark-200'),\n            300: hs-core.token-get('accent-dark-300'),\n            400: hs-core.token-get('accent-dark-400'),\n            600: hs-core.token-get('accent-dark-600'),\n            'ink': hs-core.token-get('accent-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('accent-dark-200'), 8%),\n              300: rgba(_raw('accent-dark-300'), 12%),\n              400: rgba(_raw('accent-dark-400'), 20%),\n              600: rgba(_raw('accent-dark-600'), 33%)\n            ),\n          ),\n          $surface: (\n            200: hs-core.token-get('surface-dark-200'),\n            300: hs-core.token-get('surface-dark-300'),\n            400: hs-core.token-get('surface-dark-400'),\n            600: hs-core.token-get('surface-dark-600'),\n            'ink': hs-core.token-get('surface-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('surface-dark-200'), 8%),\n              300: rgba(_raw('surface-dark-300'), 12%),\n              400: rgba(_raw('surface-dark-400'), 20%),\n              600: rgba(_raw('surface-dark-600'), 33%)\n            ),\n          ),\n          $disabled: (\n            'default': hs-core.primitive-token-get('dp-white-alpha.default'),\n            'ink': hs-core.primitive-token-get('dp-white-alpha.ink')\n          ),\n          $background: (\n            'default': hs-core.token-get('background-dark'),\n            'ink': hs-core.token-get('background-dark-ink'),\n          ),\n        );\n      }\n    }\n\n\t\t@if $_dark-mode == 'auto' {\n\t\t\t@media (prefers-color-scheme: dark) {\n\t\t\t\t&:not([hashi-theme='light']):not([theme='light']):not([data-theme='light']):not(.is-light) {\n\t\t\t\t\tcolor-scheme: dark;\n          @include hs-core.token-config(\n            $primary: (\n              200: hs-core.token-get('primary-dark-200'),\n              300: hs-core.token-get('primary-dark-300'),\n              400: hs-core.token-get('primary-dark-400'),\n              600: hs-core.token-get('primary-dark-600'),\n              'ink': hs-core.token-get('primary-dark-ink'),\n              'alpha': (\n                200: rgba(_raw('primary-dark-200'), 8%),\n                300: rgba(_raw('primary-dark-300'), 12%),\n                400: rgba(_raw('primary-dark-400'), 20%),\n                600: rgba(_raw('primary-dark-600'), 33%)\n              ),\n            ),\n            $accent: (\n              200: hs-core.token-get('accent-dark-200'),\n              300: hs-core.token-get('accent-dark-300'),\n              400: hs-core.token-get('accent-dark-400'),\n              600: hs-core.token-get('accent-dark-600'),\n              'ink': hs-core.token-get('accent-dark-ink'),\n              'alpha': (\n                200: rgba(_raw('accent-dark-200'), 8%),\n                300: rgba(_raw('accent-dark-300'), 12%),\n                400: rgba(_raw('accent-dark-400'), 20%),\n                600: rgba(_raw('accent-dark-600'), 33%)\n              ),\n            ),\n            $surface: (\n              200: hs-core.token-get('surface-dark-200'),\n              300: hs-core.token-get('surface-dark-300'),\n              400: hs-core.token-get('surface-dark-400'),\n              600: hs-core.token-get('surface-dark-600'),\n              'ink': hs-core.token-get('surface-dark-ink'),\n              'alpha': (\n                200: rgba(_raw('surface-dark-200'), 8%),\n                300: rgba(_raw('surface-dark-300'), 12%),\n                400: rgba(_raw('surface-dark-400'), 20%),\n                600: rgba(_raw('surface-dark-600'), 33%)\n              ),\n            ),\n            $disabled: (\n              'default': hs-core.primitive-token-get('dp-white-alpha.default'),\n              'ink': hs-core.primitive-token-get('dp-white-alpha.ink')\n            ),\n            $background: (\n              'default': hs-core.token-get('background-dark'),\n              'ink': hs-core.token-get('background-dark-ink'),\n            ),\n          );\n\t\t\t\t}\n      }\n\t\t\t&.is-dark,\n\t\t\t&[hashi-theme='dark'],\n      &[theme='dark'],\n      &[data-theme='dark'] {\n        color-scheme: dark;\n        @include hs-core.token-config(\n          $primary: (\n            200: hs-core.token-get('primary-dark-200'),\n            300: hs-core.token-get('primary-dark-300'),\n            400: hs-core.token-get('primary-dark-400'),\n            600: hs-core.token-get('primary-dark-600'),\n            'ink': hs-core.token-get('primary-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('primary-dark-200'), 8%),\n              300: rgba(_raw('primary-dark-300'), 12%),\n              400: rgba(_raw('primary-dark-400'), 20%),\n              600: rgba(_raw('primary-dark-600'), 33%)\n            ),\n          ),\n          $accent: (\n            200: hs-core.token-get('accent-dark-200'),\n            300: hs-core.token-get('accent-dark-300'),\n            400: hs-core.token-get('accent-dark-400'),\n            600: hs-core.token-get('accent-dark-600'),\n            'ink': hs-core.token-get('accent-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('accent-dark-200'), 8%),\n              300: rgba(_raw('accent-dark-300'), 12%),\n              400: rgba(_raw('accent-dark-400'), 20%),\n              600: rgba(_raw('accent-dark-600'), 33%)\n            ),\n          ),\n          $surface: (\n            200: hs-core.token-get('surface-dark-200'),\n            300: hs-core.token-get('surface-dark-300'),\n            400: hs-core.token-get('surface-dark-400'),\n            600: hs-core.token-get('surface-dark-600'),\n            'ink': hs-core.token-get('surface-dark-ink'),\n            'alpha': (\n              200: rgba(_raw('surface-dark-200'), 8%),\n              300: rgba(_raw('surface-dark-300'), 12%),\n              400: rgba(_raw('surface-dark-400'), 20%),\n              600: rgba(_raw('surface-dark-600'), 33%)\n            ),\n          ),\n          $disabled: (\n            'default': hs-core.primitive-token-get('dp-white-alpha.default'),\n            'ink': hs-core.primitive-token-get('dp-white-alpha.ink')\n          ),\n          $background: (\n            'default': hs-core.token-get('background-dark'),\n            'ink': hs-core.token-get('background-dark-ink'),\n          ),\n        );\n      }\n    }\n  }\n\n  @content;\n}\n\n@function _get-color($query, $tone) {\n  @return hs-core.token-switch('#{$query}-#{$tone}', hs-core.primitive-token-switch('#{$query}.#{$tone}', $query))\n}\n\n@function _get-family($query) {\n  @return hs-core.primitive-token-switch('family.#{map.get($query, 'family')}', map.get($query, 'family'));\n}\n\n@function _get-size($query) {\n  @return hs-core.primitive-token-switch('size.#{map.get($query, 'size')}', map.get($query, 'size'));\n}\n\n@function _get-weight($query) {\n  @return hs-core.primitive-token-switch('weight.#{map.get($query, 'weight')}', map.get($query, 'weight'));\n}\n\n@function _get-line-height($query) {\n  @return hs-core.primitive-token-switch('line-height.#{map.get($query, 'line-height')}', map.get($query, 'line-height'));\n}\n\n@function _raw($query) {\n  @return hs-core.token-switch-raw($query, hs-core.primitive-token-switch($query));\n}\n","///\n//  Copyright (c) 2022 Matteu\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n\n@use '../feature';\n\n/// Stores the prefix for the design system.\n/// @access public\n$ds-prefix: '' !default;\n\n/// Stores the context for the design system.\n/// @access public\n$ds-context: '' !default;\n\n/// Validation for tokens.\n/// @access public\n$validation: true !default;\n\n/// Stores all the tokens for getting raw values.\n/// @access private\n$_ds-token-registry: ();\n\n/// Creates a theme token.\n/// @param {string} $key\n/// @param {*} $value\n/// @return {*} returns a token as CSS custom properties with prefix and context.\n@mixin create($key, $value) {\n  --#{_sanitize-prefix($ds-prefix)}#{_sanitize-context($ds-context)}#{$key}: #{$value};\n  @include _register-token($key, $value);\n}\n\n/// Configures a set of tokens, either using maps or separate arguments, to a selector.\n/// @param {map} $token-map\n/// @param {args} $tokens...\n/// @return {*} CSS-ized tokens.\n@mixin config($map: (), $tokens...) {\n  @if not feature.is-empty($map) {\n    @each $key, $value in $map {\n      @if meta.type-of($value) == map {\n        @each $_key, $_value in $value {\n          @if $_key == 'default' {\n            @if meta.type-of($_value) == map {\n              @include config(('#{$key}': $_value));\n            } @else {\n              @include create('#{$key}', $_value);\n            }\n          } @else {\n            @if meta.type-of($_value) == map {\n              @include config(('#{$key}-#{$_key}': $_value));\n            } @else {\n              @include create('#{$key}-#{$_key}', $_value);\n            }\n          }\n        }\n      } @else {\n        @include create('#{$key}', $value);\n      }\n    }\n  }\n\n  @if meta.keywords($tokens) {\n    @each $key, $value in meta.keywords($tokens) {\n      @if meta.type-of($value) == map {\n        @each $_key, $_value in $value {\n          @if $_key == 'default' {\n            @if meta.type-of($_value) == map {\n              @include config($map: ($key: $_value));\n            } @else {\n              @include create('#{$key}', $_value);\n            }\n          } @else {\n            @if meta.type-of($_value) == map {\n              @include config($map: ('#{$key}-#{$_key}': $_value));\n            } @else {\n              @include create('#{$key}-#{$_key}', $_value);\n            }\n          }\n        }\n      } @else {\n\n        @include create($key, $value);\n\n      }\n    }\n  }\n}\n\n/// DEPRECATED: Configures a set of tokens, either using maps or separate arguments, to a selector.\n/// @deprecated Use token-config() instead.\n/// @param {map} $token-map\n/// @param {args} $tokens...\n/// @return {*} CSS-ized tokens.\n@mixin add($map: (), $tokens...) {\n  @warn 'The token-add() mixin will be deprecated on version 1.x. Use the token-config() mixin instead.';\n  @include config($map, $tokens...);\n}\n\n/// Retrieves an existing theme token.\n/// @param {string} $key\n/// @return {string} tokenized css custom property selector.\n@function get($key) {\n  @if _is-registered-token($key) {\n    @return var(--#{_sanitize-prefix($ds-prefix)}#{_sanitize-context($ds-context)}#{_sanitize-key($key)});\n  }\n  @if not $validation {\n    @return var(--#{_sanitize-prefix($ds-prefix)}#{_sanitize-context($ds-context)}#{_sanitize-key($key)});\n  }\n}\n\n/// Retrieves the raw value of an existing theme token.\n/// @param {string} $key\n/// @return {*} token value.\n@function get-raw($key) {\n  @if _is-registered-token($key) {\n    @return map.get($_ds-token-registry, $key);\n  }\n  @if not $validation {\n    @return map.get($_ds-token-registry, $key);\n  }\n}\n\n// TODO: Find a way to implement this properly.\n/// Retrieves the entire token registry.\n/// @param {list<string>} $targets\n/// @return {map} map of tokens.\n// @function registry-get($targets: 'all') {\n//   @if not feature.is-empty($targets) {\n//     $targeted-tokens: ();\n//     @each $target in $targets {\n//       @each $key, $value in $_ds-token-registry {\n//         @if string.index($key, $target) == 1 {\n//           $targeted-tokens: map.set($targeted-tokens, $key, $value);\n//         }\n//       }\n//     }\n//     @return $targeted-tokens;\n//   }\n//\n//   @if $targets == 'all' {\n//     @return $_ds-token-registry;\n//   }\n//\n//   @return $_ds-token-registry;\n// }\n\n/// Check if the query is a token or not. If the query is a token, output a token. If not, output as is.\n/// @param {*} $query\n/// @param {*} $fallback\n/// @return {token|*} token or raw value.\n@function switch($query, $fallback: ()) {\n  @if not check($query) {\n    @if not feature.is-empty($fallback) {\n      @return $fallback;\n    }\n    @return $query;\n  } @else {\n    @return get($query);\n  }\n}\n\n/// Check if the query is a token or not. If the query is a token, output a raw token value. If not, output as is.\n/// @param {*} $query\n/// @param {*} $fallback\n/// @return {token|*} token raw value or raw value.\n@function switch-raw($query, $fallback: ()) {\n  @if not check($query) {\n    @if not feature.is-empty($fallback) {\n      @return $fallback;\n    }\n    @return $query;\n  } @else {\n    @return get-raw($query);\n  }\n}\n\n/// Checks if the query is a valid registered token. This is a different method from the private one.\n/// @param {*} query\n/// @return {boolean} validated query.\n@function check($query) {\n  @return _is-registered-token($query, false);\n}\n\n/// Sanitizes and verifies a key.\n/// @access private\n/// @param {string} $key\n/// @return {string} sanitized and validated key.\n@function _sanitize-key($key) {\n  @if string.index($key, '$') {\n    @return string.slice($key, 2);\n  }\n  @return $key;\n}\n\n/// Sanitizes and verifies a context.\n/// @access private\n/// @param {string} $context\n/// @return {string} sanitized and validated context.\n@function _sanitize-context($context) {\n  @if feature.is-empty($context) {\n    @return '';\n  }\n  @return '#{$context}-';\n}\n\n/// Sanitizes and verifies a prefix.\n/// @access private\n/// @param {string} $prefix\n/// @return {string} sanitized and validated prefix.\n@function _sanitize-prefix($prefix) {\n  @if feature.is-empty($prefix) {\n    @return '';\n  }\n  @return '#{$ds-prefix}-';\n}\n\n/// Registers a token to the token registry variable.\n/// @access private\n/// @param {string} $key\n/// @param {*} $value\n/// @return {void} token registry\n@mixin _register-token($key, $value) {\n  $_ds-token-registry: map.set($_ds-token-registry, $key, $value) !global;\n}\n\n/// Validates a query if it's a registered token or not\n/// @access private\n/// @param {string} $query\n/// @return {boolean|error} is registered token\n@function _is-registered-token($query, $errors: $validation) {\n  @if not list.index(map.keys($_ds-token-registry), $query) {\n    @if $errors {\n      @error 'Invalid token: #{$query}. Please use a valid registered token: #{map.keys($_ds-token-registry)}';\n    } @else {\n      @return false;\n    }\n  } @else {\n    @return true;\n  }\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use 'sass:map';\n@use 'sass:list';\n\n@use 'theme-key' as key;\n\n$_valid-intents: (\n  'create',\n  'bind'\n);\n\n@mixin property($property, $values, $intent: 'create') {\n  $key: list.nth($values, 1);\n  $value: list.nth($values, 2);\n\n  @if not list.index($_valid-intents, $intent) {\n    @error \"Invalid intent: #{$intent}. Please use a valid intent: #{$_valid-intents}.\";\n  }\n\n  & {\n    @if $intent == 'bind' {\n      @include key.bind($key, $value);\n    } @else if $intent == 'create' {\n      #{$property}: key.create($key, $value);\n    }\n  }\n}","///\n//  Copyright (c) 2023 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n\n@mixin init(\n  $width: max-content,\n  $icon-ink: inherit,\n  $label-ink: inherit,\n  $gap: 'sm',\n) {\n  .hs-button {\n    @include hs-core.shape-width('button', (\n      default: auto,\n      min: 64px,\n      max: $width\n    ));\n    @include hs-core.shape-height('button', max-content);\n\n    & {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n\n      user-select: none;\n      overflow: visible;\n      vertical-align: middle;\n      box-sizing: border-box;\n      cursor: pointer;\n\n      -webkit-appearance: caret;\n    }\n\n    & {\n      @include hs-core.prefix(transition, all var(--hs-transition-time) ease);\n    }\n\n    @content;\n\n    & {\n      ::-moz-focus-inner {\n        padding: 0;\n        border-style: none;\n      }\n    }\n\n    & > * + * {\n      margin-left: hs-core.key-create('button-gap', hs-core.primitive-token-switch('spacing.#{$gap}', $gap));\n    }\n\n    .hs-button__icon {\n      display: hs-core.key-create('button-icon-visibility', flex);\n      align-items: center;\n      @include hs-core.color-ink('button-icon', $icon-ink);\n      @include hs-core.typography-size('button-icon', hs-core.to-rem(20px));\n      /* @fallback */\n      & {\n        width: hs-core.key-create('button-icon-size', hs-core.to-rem(20px));\n        height: hs-core.key-create('button-icon-size', hs-core.to-rem(20px));\n      }\n\n      > * {\n        @include hs-core.color-ink('button-icon', $icon-ink);\n        @include hs-core.typography-size('button-icon', hs-core.to-rem(20px));\n        /* @fallback */\n        & {\n          width: hs-core.key-create('button-icon-size', hs-core.to-rem(20px));\n          height: hs-core.key-create('button-icon-size', hs-core.to-rem(20px));\n        }\n      }\n    }\n\n    .hs-button__label {\n      display: hs-core.key-create('button-label-visibility', inline-block);\n      @include hs-core.shape-padding('button-label', 0);\n      @include hs-core.color-ink('button-label', $label-ink);\n      @include hs-core.typography-family('button-label', inherit);\n      @include hs-core.typography-size('button-label', inherit);\n      @include hs-core.typography-weight('button-label', inherit);\n      @include hs-core.typography-line-height('button-label', inherit);\n      & {\n        text-align: center;\n        letter-spacing: 0.02rem;\n      }\n    }\n  }\n\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '@matteusan/sentro';\n\n@mixin prefix($property, $value, $targets: ()) {\n  & {\n    @include sentro.prefix($property, $value, $targets);\n  }\n}","//\r\n//  Copyright (c) 2022 Matteu\r\n//\r\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n//  of this software and associated documentation files (the \"Software\"), to deal\r\n//  in the Software without restriction, including without limitation the rights\r\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n//  copies of the Software, and to permit persons to whom the Software is\r\n//  furnished to do so, subject to the following conditions:\r\n//\r\n//  The above copyright notice and this permission notice shall be included in all\r\n//  copies or substantial portions of the Software.\r\n//\r\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n//  SOFTWARE.\r\n//\r\n\r\n@use '../feature';\r\n@use 'sass:map';\r\n\r\n$prefix-properties: (\r\n  transition: (\r\n    'webkit'\r\n  ),\r\n  box-shadow: (\r\n    'webkit',\r\n    'ms'\r\n  ),\r\n  background-clip: (\r\n    'webkit'\r\n  ),\r\n  box-reflect: (\r\n    'webkit'\r\n  ),\r\n  filter: (\r\n    'webkit'\r\n  ),\r\n  word-break: (\r\n    'ms'\r\n  ),\r\n  object-fit: (\r\n    'o'\r\n  ),\r\n  transform: (\r\n    'webkit',\r\n    'ms'\r\n  ),\r\n  appearance: (\r\n    'webkit',\r\n    'moz'\r\n  ),\r\n  user-select: (\r\n    'webkit',\r\n    'moz',\r\n    'ms'\r\n  )\r\n);\r\n\r\n$prefix-values: ();\r\n\r\n$_valid-prefixes: ('webkit', 'ms', 'moz', 'o');\r\n\r\n@mixin _prefix-property($property, $value, $targets: all) {\r\n  @if not feature.has-property($prefix-properties, $property) {\r\n    \r\n    #{$property}: $value;\r\n    \r\n  } @else {\r\n    $_prefix-map: map.get($prefix-properties, $property);\r\n    \r\n    @each $prefix in $_prefix-map {\r\n      #{'-' + $prefix + '-' + $property}: $value;\r\n    }\r\n    \r\n    #{$property}: $value;\r\n  }\r\n}\r\n\r\n@function _prefix-value($property, $value, $targets: all) {\r\n  //\r\n}\r\n\r\n@mixin prefix($property, $value, $targets: all) {\r\n  @include _prefix-property($property, $value, $targets);\r\n}","//\r\n//  Copyright (c) 2022 Matteu\r\n//\r\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n//  of this software and associated documentation files (the \"Software\"), to deal\r\n//  in the Software without restriction, including without limitation the rights\r\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n//  copies of the Software, and to permit persons to whom the Software is\r\n//  furnished to do so, subject to the following conditions:\r\n//\r\n//  The above copyright notice and this permission notice shall be included in all\r\n//  copies or substantial portions of the Software.\r\n//\r\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n//  SOFTWARE.\r\n//\r\n\r\n@use 'sass:list';\r\n@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:string';\r\n\r\n@use '../feature';\r\n\r\n/// Stores the prefix for the design system.\r\n/// @access public\r\n$ds-prefix: '' !default;\r\n\r\n/// Stores the keys for getting raw values.\r\n/// @access private\r\n$_ds-key-registry: ();\r\n\r\n/// Validation for keys.\r\n/// @access public\r\n$validation: true !default;\r\n\r\n/// Creates a key for a css property of a component.\r\n/// @param {string} $key\r\n/// @param {*} $value\r\n/// @return {string} returns var() with key and fallback value.\r\n@function create($key, $value) {\r\n  $_ds-key-registry: map.set($_ds-key-registry, $key, $value) !global;\r\n  @return var(--#{_sanitize-prefix($ds-prefix)}#{$key}, #{$value});\r\n}\r\n\r\n/// Retrieves an existing component key.\r\n/// @param {string} $key\r\n/// @return {string} returns var() with key.\r\n@function get($key) {\r\n  @if _is-registered-key($key) {\r\n    @return var(--#{_sanitize-prefix($ds-prefix)}#{$key});\r\n  }\r\n  @if not $validation {\r\n    @return var(--#{_sanitize-prefix($ds-prefix)}#{$key});\r\n  }\r\n}\r\n\r\n/// Retrieves the raw value of an existing component key.\r\n/// @param {string} $key\r\n/// @return {string} returns var() with key.\r\n@function get-raw($key) {\r\n  @if _is-registered-key($key) {\r\n    @return map.get($_ds-key-registry, $key);\r\n  }\r\n  @if not $validation {\r\n    @return map.get($_ds-key-registry, $key);\r\n  }\r\n}\r\n\r\n/// Checks if the query is a valid registered key. This is a different method from the private one.\r\n/// @param {*} query\r\n/// @return {boolean} validated query.\r\n@function check($query) {\r\n  @return _is-registered-key($query, false);\r\n}\r\n\r\n/// Binds the a value to the component key.\r\n/// @param {string} $key\r\n/// @param {*} $value\r\n/// @return {string|*} returns an overrider css custom property with a new value.\r\n@mixin bind($key, $value) {\r\n  --#{_sanitize-prefix($ds-prefix)}#{$key}: #{$value};\r\n  @if not check($key) {\r\n    @include _register-key($key, $value);\r\n  }\r\n}\r\n\r\n/// Sanitizes and verifies a prefix.\r\n/// @access private\r\n/// @param {string} $prefix\r\n/// @return {string} sanitized and validated prefix.\r\n@function _sanitize-prefix($prefix) {\r\n  @if feature.is-empty($prefix) {\r\n    @return '';\r\n  }\r\n  @return '#{$prefix}-';\r\n}\r\n\r\n/// Registers a key to the key registry variable.\r\n/// @access private\r\n/// @param {string} $key\r\n/// @param {*} $value\r\n/// @return {void} key registry\r\n@mixin _register-key($key, $value) {\r\n  $_ds-key-registry: map.set($_ds-key-registry, $key, $value) !global;\r\n}\r\n\r\n/// Validates a query if it's a registered key or not\r\n/// @access private\r\n/// @param {string} $query\r\n/// @return {boolean|error} is registered key\r\n@function _is-registered-key($query, $errors: $validation) {\r\n  @if not list.index(map.keys($_ds-key-registry), $query) {\r\n    @if $errors {\r\n      @error 'Invalid key: #{$query}. Please use a valid registered key: #{map.keys($_ds-key-registry)}';\r\n    } @else {\r\n      @return false;\r\n    }\r\n  } @else {\r\n    @return true;\r\n  }\r\n}","///\n//  Copyright (c) 2023 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:math';\n\n@use 'button-base';\n@use 'button-shared' as shared;\n\n$fill: 'accent-400' !default;\n$fill-hover: 'accent-400' !default;\n$fill-focus: 'accent-400' !default;\n$fill-active: 'accent-200' !default;\n$fill-disabled: 'disabled' !default;\n\n$ink: 'accent-ink' !default;\n$ink-disabled: 'disabled-ink' !default;\n\n$border: $fill !default;\n$border-hover: $fill-hover !default;\n$border-focus: $fill-focus !default;\n$border-active: $fill-active !default;\n$border-disabled: $fill-disabled !default;\n\n$width: max-content !default;\n$radius: 'small' !default;\n$padding: ('sm' 'md') !default;\n$border-width: 1px !default;\n$border-style: solid !default;\n\n$family: 'body' !default;\n$size: 'body' !default;\n$weight: 'bold' !default;\n$line-height: 'normal' !default;\n\n$icon-ink: inherit !default;\n$label-ink: inherit !default;\n\n$gap: 'sm' !default;\n\n$theme: () !default;\n\n$_fill: hs-core.prioritize(map.get($theme, 'fill'), $fill);\n$_fill-hover: hs-core.prioritize(map.get($theme, 'fill-hover'), $fill-hover);\n$_fill-focus: hs-core.prioritize(map.get($theme, 'fill-focus'), $fill-focus);\n$_fill-active: hs-core.prioritize(map.get($theme, 'fill-active'), $fill-active);\n$_fill-disabled: hs-core.prioritize(map.get($theme, 'fill-disabled'), $fill-disabled);\n\n$_ink: hs-core.prioritize(map.get($theme, 'ink'), $ink);\n$_ink-disabled: hs-core.prioritize(map.get($theme, 'ink-disabled'), $ink-disabled);\n\n$_border: hs-core.prioritize(map.get($theme, 'border'), $border);\n$_border-hover: hs-core.prioritize(map.get($theme, 'border-hover'), $border-hover);\n$_border-focus: hs-core.prioritize(map.get($theme, 'border-focus'), $border-focus);\n$_border-active: hs-core.prioritize(map.get($theme, 'border-active'), $border-active);\n$_border-disabled: hs-core.prioritize(map.get($theme, 'border-disabled'), $border-disabled);\n\n$_width: hs-core.prioritize(map.get($theme, 'width'), $width) !default;\n$_radius: hs-core.prioritize(map.get($theme, 'radius'), $radius);\n$_padding: hs-core.prioritize(map.get($theme, 'padding'), $padding);\n$_border-width: hs-core.prioritize(map.get($theme, 'border-width'), $border-width);\n$_border-style: hs-core.prioritize(map.get($theme, 'border-style'), $border-style);\n\n$_family: hs-core.prioritize(map.get($theme, 'family'), $family);\n$_size: hs-core.prioritize(map.get($theme, 'size'), $size);\n$_weight: hs-core.prioritize(map.get($theme, 'weight'), $weight);\n$_line-height: hs-core.prioritize(map.get($theme, 'line-height'), $line-height);\n\n$_icon-ink: hs-core.prioritize(map.get($theme, 'icon-ink'), $icon-ink);\n$_label-ink: hs-core.prioritize(map.get($theme, 'label-ink'), $label-ink);\n\n$_gap: hs-core.prioritize(map.get($theme, 'gap'), $gap);\n\n$_states: ('error');\n\n$_fills: (\n  'default': $_fill,\n  'hover': $_fill-hover,\n  'focus': $_fill-focus,\n  'active': $_fill-active,\n  'disabled': $_fill-disabled,\n);\n\n$_inks: (\n  'default': $_ink,\n  'disabled': $_ink-disabled,\n);\n\n$_borders: (\n  'default': $_border,\n  'hover': $_border-hover,\n  'focus': $_border-focus,\n  'active': $_border-active,\n  'disabled': $_border-disabled,\n);\n\n@mixin render() {\n  @include button-base.init(\n    $width: $_width,\n    $icon-ink: $_icon-ink,\n    $label-ink: $_label-ink,\n    $gap: $_gap\n  ) {\n    @include hs-core.color-apply('button', (\n      fill: 'dp-black-400',\n      ink: 'dp-black-ink',\n      border: 'dp-black-400'\n    ));\n    @include hs-core.shape-border-width('button', $_border-width);\n    @include hs-core.shape-border-style('button', $_border-style);\n    @include hs-core.shape-apply('button', (\n      radius: $_radius,\n      padding: $_padding,\n    ));\n    @include hs-core.typography-apply('button', (\n      family: $_family,\n      size: $_size,\n      weight: $_weight,\n      line-height: $_line-height\n    ));\n\n    @include shared.text-style(\n      $fills: $_fills,\n      $inks: $_inks,\n      $borders: $_borders\n    );\n\n    &:where(.is-icon-only) {\n      @include hs-core.key-bind('button-min-width', auto !important);\n      @include hs-core.key-bind('button-padding', _assert-icon-only-padding($_padding));\n      @include hs-core.key-bind('button-label-visibility', none !important);\n    }\n\n    @each $state in $_states {\n      &:where(.is-#{$state}) {\n        @include shared.text-style(\n          $fills: (\n            'default': '#{$state}-400',\n            'hover': '#{$state}-400',\n            'focus': '#{$state}-400',\n            'active': '#{$state}-200',\n            'disabled': $_fill-disabled,\n          ),\n          $inks: (\n            'default': '#{$state}-ink',\n            'disabled': $_ink-disabled\n          ),\n          $borders: (\n            'default': '#{$state}-400',\n            'hover': '#{$state}-400',\n            'focus': '#{$state}-400',\n            'active': '#{$state}-200',\n            'disabled': $_border-disabled,\n          )\n        );\n      }\n    }\n\n    &:where(.is-outlined) {\n      @include shared.outlined-style(\n        $fills: $_fills,\n        $inks: $_inks,\n        $borders: $_borders\n      );\n\n      @each $state in $_states {\n        &:where(.is-#{$state}) {\n          @include shared.outlined-style(\n            $fills: (\n              'default': '#{$state}-400',\n              'hover': '#{$state}-400',\n              'focus': '#{$state}-400',\n              'active': '#{$state}-200',\n              'disabled': $_fill-disabled,\n            ),\n            $inks: (\n              'default': '#{$state}-ink',\n              'disabled': $_ink-disabled\n            ),\n            $borders: (\n              'default': '#{$state}-400',\n              'hover': '#{$state}-400',\n              'focus': '#{$state}-400',\n              'active': '#{$state}-200',\n              'disabled': $_border-disabled,\n            )\n          );\n        }\n      }\n    }\n\n    &:where(.is-filled) {\n      @include shared.filled-style(\n        $fills: $_fills,\n        $inks: $_inks,\n        $borders: $_borders\n      );\n\n      @each $state in $_states {\n        &:where(.is-#{$state}) {\n          @include shared.filled-style(\n            $fills: (\n              'default': '#{$state}-400',\n              'hover': '#{$state}-400',\n              'focus': '#{$state}-400',\n              'active': '#{$state}-200',\n              'disabled': $_fill-disabled,\n            ),\n            $inks: (\n              'default': '#{$state}-ink',\n              'disabled': $_ink-disabled\n            ),\n            $borders: (\n              'default': '#{$state}-400',\n              'hover': '#{$state}-400',\n              'focus': '#{$state}-400',\n              'active': '#{$state}-200',\n              'disabled': $_border-disabled,\n            )\n          );\n        }\n      }\n\n      &.is-raised {\n        @include hs-core.shape-apply('button', (\n          shadow: 'low'\n        ));\n\n        &:hover,\n        &:focus {\n          @include hs-core.shape-apply('button', (\n            shadow: 'normal'\n          ));\n        }\n\n        &:active {\n          @include hs-core.shape-apply('button', (\n            shadow: 'high'\n          ));\n        }\n      }\n    }\n\n    &.is-fullwidth {\n      @include hs-core.key-bind('button-width', 100%);\n      @include hs-core.key-bind('button-min-width', auto);\n      @include hs-core.key-bind('button-max-width', 100%);\n      display: flex;\n    }\n  }\n}\n\n/// Asserts the highest padding value from a list and returns it.\n/// @param {list} $padding-list\n/// @return {number} returns highest padding value.\n@function _assert-icon-only-padding($padding-list) {\n  $padding-top: hs-core.token-switch-raw('padding-#{list.nth($padding-list, 1)}', list.nth($padding-list, 1));\n  @return $padding-top;\n\n  @if list.length($padding-list) == 2 {\n    $padding-right: hs-core.token-switch-raw('padding-#{list.nth($padding-list, 2)}', list.nth($padding-list, 2));\n    @return math.max($padding-top, $padding-right);\n\n    @if list.length($padding-list) == 3 {\n      $padding-bottom: hs-core.token-switch-raw('padding-#{list.nth($padding-list, 3)}', list.nth($padding-list, 3));\n      @return math.max($padding-top, $padding-right, $padding-bottom);\n\n      @if list.length($padding-list) == 4 {\n        $padding-left: hs-core.token-switch-raw('padding-#{list.nth($padding-list, 4)}', list.nth($padding-list, 4));\n        @return math.max($padding-top, $padding-right, $padding-bottom, $padding-left);\n      }\n    }\n  }\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n@use '../hs-button/button-shared' as shared;\n\n@use 'sass:map';\n\n$fill: 'accent-400' !default;\n$fill-hover: 'accent-400' !default;\n$fill-focus: 'accent-400' !default;\n$fill-active: 'accent-200' !default;\n\n$ink: 'accent-ink' !default;\n\n$border: $fill !default;\n$border-hover: $fill-hover !default;\n$border-focus: $fill-focus !default;\n$border-active: $fill-active !default;\n\n$radius: 'small' !default;\n$gap: 'sm' !default;\n\n$theme: () !default;\n\n$_fill: hs-core.prioritize(map.get($theme, 'fill'), $fill);\n$_fill-hover: hs-core.prioritize(map.get($theme, 'fill-hover'), $fill-hover);\n$_fill-focus: hs-core.prioritize(map.get($theme, 'fill-focus'), $fill-focus);\n$_fill-active: hs-core.prioritize(map.get($theme, 'fill-active'), $fill-active);\n\n$_ink: hs-core.prioritize(map.get($theme, 'ink'), $ink);\n\n$_border: hs-core.prioritize(map.get($theme, 'border'), $border);\n$_border-hover: hs-core.prioritize(map.get($theme, 'border-hover'), $border-hover);\n$_border-focus: hs-core.prioritize(map.get($theme, 'border-focus'), $border-focus);\n$_border-active: hs-core.prioritize(map.get($theme, 'border-active'), $border-active);\n\n$_radius: hs-core.prioritize(map.get($theme, 'radius'), $radius);\n$_gap: hs-core.prioritize(map.get($theme, 'gap'), $gap);\n\n$_fills: (\n  'default': $fill,\n  'hover': $fill-hover,\n  'focus': $fill-focus,\n  'active': $fill-active,\n);\n\n$_inks: (\n  'default': $ink,\n);\n\n$_borders: (\n  'default': $border,\n  'hover': $border-hover,\n  'focus': $border-focus,\n  'active': $border-active,\n);\n\n@mixin render() {\n  .hs-button-group {\n    display: flex;\n    flex-flow: row nowrap;\n    box-sizing: border-box;\n\n    input[type='radio'],\n    input[type='checkbox'] {\n      position: absolute;\n      clip: rect(0,0,0,0);\n      pointer-events: none;\n\n      &:checked {\n        + .hs-button {\n          &:not(:disabled) {\n            @include hs-core.color-bind('button', (\n              fill: $fill,\n              ink: $ink,\n              border: $border\n            ));\n          }\n        }\n      }\n    }\n\n    .hs-button {\n      @include hs-core.key-bind('button-radius', hs-core.primitive-token-get('radius.none'));\n      @include shared.outlined-style(\n        $fills: $_fills,\n        $inks: $_inks,\n        $borders: $_borders\n      );\n\n      &:not(:nth-child(2)) {\n        margin-left: hs-core.key-create('button-group-gap', hs-core.primitive-token-switch('spacing.#{$gap}', $gap));\n      }\n\n      &:nth-child(2) {\n        @include hs-core.shape-radius('button', (\n          $radius 0 0 $radius\n        ), 'bind');\n      }\n\n      &:last-child {\n        @include hs-core.shape-radius('button', (\n          0 $radius $radius 0\n        ), 'bind');\n      }\n\n      &:where(.is-active),\n      &:where([aria-selected='true']),\n      &:where([hashi-selected='true']),\n      &:where([data-selected='true']) {\n        @include hs-core.color-bind('button', (\n          fill: $fill,\n          ink: $ink,\n          border: $border\n        ));\n      }\n    }\n  }\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n@use 'sass:map';\n\n$ink: 'accent-400' !default;\n\n$theme: () !default;\n\n$_ink: hs-core.prioritize(map.get($theme, 'ink'), $ink);\n\n@mixin render() {\n  .hs-link {\n    text-decoration: underline;\n    @include hs-core.color-apply('button', (\n      fill: transparent,\n      ink: $_ink,\n      border: transparent\n    ));\n\n    &:hover {\n      @include hs-core.color-bind('button', (\n        fill: rgba(hs-core.token-get-raw($_ink), hs-core.$color-fill-hover-opacity),\n        ink: $_ink,\n        border: rgba(hs-core.token-get-raw($_ink), hs-core.$color-border-hover-opacity)\n      ));\n    }\n\n    &:focus {\n      @include hs-core.color-bind('button', (\n        fill: rgba(hs-core.token-get-raw($_ink), hs-core.$color-fill-focus-opacity),\n        ink: $_ink,\n        border: rgba(hs-core.token-get-raw($_ink), hs-core.$color-border-focus-opacity)\n      ));\n    }\n\n    &:active {\n      @include hs-core.color-bind('button', (\n        fill: rgba(hs-core.token-get-raw($_ink), hs-core.$color-fill-active-opacity),\n        ink: $_ink,\n        border: rgba(hs-core.token-get-raw($_ink), hs-core.$color-border-active-opacity)\n      ));\n    }\n\n    @include hs-core.prefix(transition, all var(--hs-transition-time) ease);\n  }\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n\n@use 'sass:map';\n\n@mixin init(\n  $label-ink,\n  $helper-ink,\n) {\n  .hs-form-field {\n    width: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    position: relative;\n    margin-bottom: 0.8rem;\n    box-sizing: border-box;\n\n    @content;\n\n    .hs-form-field__label {\n      @include hs-core.color-apply('form-field-label', (\n        ink: $label-ink,\n      ));\n      @include hs-core.typography-apply('form-field', (\n        weight: 'bold',\n        line-height: 'broad'\n      ));\n    }\n\n    .hs-form-field__icon {\n      width: 22px;\n      height: 22px;\n      display: inline-flex;\n      place-items: center;\n      position: absolute;\n      top: 55%;\n      left: hs-core.primitive-token-get('padding.md');\n      transform: translateY(-52%);\n\n      &.is-leading {\n        right: hs-core.primitive-token-get('padding.md');\n        left: auto;\n\n        + .hs-form-field__input {\n          padding-right: calc(#{hs-core.primitive-token-get('padding.md')} + 30px);\n        }\n      }\n\n      + .hs-form-field__input {\n        -webkit-appearance: caret;\n        padding-left: calc(#{hs-core.primitive-token-get('padding.md')} + 30px);\n      }\n    }\n\n    .hs-form-field__helper {\n      @include hs-core.color-apply('form-field-helper', (\n        ink: $helper-ink,\n      ));\n      @include hs-core.typography-apply('form-field', (\n        family: 'small',\n        size: 'small',\n        weight: 'light',\n        line-height: 'broad'\n      ));\n    }\n  }\n}","//\n//  Copyright (c) 2023 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n//\n\n@use '../hs-core';\n@use 'sass:map';\n@use 'form-field-base';\n\n$fill: 'surface-200' !default;\n$fill-disabled: 'disabled' !default;\n$ink: 'surface-ink' !default;\n$ink-disabled: 'disabled-ink' !default;\n$border: $fill !default;\n$border-focus: 'accent-400' !default;\n$border-disabled: 'disabled' !default;\n\n$radius: 'small' !default;\n$padding: ('md' 'lg') !default;\n$border-width: 1px !default;\n$border-style: solid !default;\n\n$family: 'body' !default;\n$size: 'body' !default;\n$weight: 'normal' !default;\n$line-height: 'normal' !default;\n\n$label-ink: 'surface-ink' !default;\n$helper-ink: 'surface-ink' !default;\n\n$theme: () !default;\n\n$_fill: hs-core.prioritize(map.get($theme, 'fill'), $fill);\n$_fill-disabled: hs-core.prioritize(map.get($theme, 'fill-disabled'), $fill-disabled);\n$_ink: hs-core.prioritize(map.get($theme, 'ink'), $ink);\n$_ink-disabled: hs-core.prioritize(map.get($theme, 'ink-disabled'), $ink-disabled);\n$_border: hs-core.prioritize(map.get($theme, 'border'), $border);\n$_border-focus: hs-core.prioritize(map.get($theme, 'border-focus'), $border-focus);\n$_border-disabled: hs-core.prioritize(map.get($theme, 'border-disabled'), $border-disabled);\n\n$_radius: hs-core.prioritize(map.get($theme, 'radius'), $radius);\n$_padding: hs-core.prioritize(map.get($theme, 'padding'), $padding);\n$_border-width: hs-core.prioritize(map.get($theme, 'border-width'), $border-width);\n$_border-style: hs-core.prioritize(map.get($theme, 'border-style'), $border-style);\n\n$_family: hs-core.prioritize(map.get($theme, 'family'), $family);\n$_size: hs-core.prioritize(map.get($theme, 'size'), $size);\n$_weight: hs-core.prioritize(map.get($theme, 'weight'), $weight);\n$_line-height: hs-core.prioritize(map.get($theme, 'line-height'), $line-height);\n\n$_label-ink: hs-core.prioritize(map.get($theme, 'label-ink'), $label-ink);\n$_helper-ink: hs-core.prioritize(map.get($theme, 'helper-ink'), $helper-ink);\n\n@mixin render() {\n  @include form-field-base.init($_label-ink, $_helper-ink) {\n    .hs-form-field__input {\n      @include hs-core.shape-apply('form-field', (\n        radius: $_radius,\n        padding: $_padding,\n        border-width: $_border-width,\n        border-style: $_border-style\n      ));\n      @include hs-core.typography-apply('form-field', (\n        family: $_family,\n        size: $_size,\n        weight: $_weight,\n        line-height: $_line-height\n      ));\n      & {\n        outline: none;\n      }\n      @include hs-core.prefix(appearance, none, ('moz', 'webkit'));\n      @include hs-core.prefix(transition, all var(--hs-transition-time) ease);\n\n      &:not(:read-only) {\n        @include hs-core.color-apply('form-field', (\n          fill: $_fill,\n          ink: $_ink,\n          border: $_border\n        ));\n\n        &:focus {\n          @include hs-core.color-bind('form-field', (\n            border: $_border-focus\n          ));\n        }\n      }\n\n      &:read-only {\n        @include hs-core.color-apply('form-field', (\n          fill: $_fill-disabled,\n          ink: $_ink-disabled,\n          border: $_border-disabled\n        ));\n      }\n    }\n\n    &:where(.is-required) {\n      .hs-form-field__label::after {\n        content: '*';\n        color: hs-core.token-get('error-400');\n        margin-left: hs-core.primitive-token-get('margin.xs');\n      }\n    }\n\n    &:where(.is-raised) {\n      .hs-form-field__input:not(:read-only) {\n        @include hs-core.shape-apply('form-field', (\n          shadow: 'low'\n        ));\n      }\n    }\n\n    &:where(.is-error) {\n      @include hs-core.color-bind('form-field-label', (\n        ink: 'error-400',\n      ));\n      @include hs-core.color-bind('form-field-helper', (\n        ink: 'error-400',\n      ));\n\n      .hs-form-field__input:not(:read-only) {\n        &:focus {\n          @include hs-core.color-bind('form-field', (\n            border: 'error-400'\n          ));\n        }\n      }\n\n      svg {\n        color: hs-core.token-get('error-400');\n      }\n    }\n  }\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n\n@mixin init($label-ink, $helper-ink) {\n  .hs-select-field {\n    width: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    position: relative;\n    margin-bottom: 0.9rem;\n\n    @content;\n\n    .hs-select-field__label {\n      width: max-content;\n      white-space: nowrap;\n      @include hs-core.color-apply('select-field-label', (\n        ink: $label-ink,\n      ));\n      @include hs-core.typography-apply('select-field', (\n        weight: 'bold',\n        line-height: 'broad'\n      ));\n    }\n\n    .hs-select-field__icon {\n      width: 22px;\n      height: 22px;\n      display: inline-flex;\n      place-items: center;\n      position: absolute;\n      top: 54.5%;\n      left: hs-core.primitive-token-get('padding.md');\n      transform: translateY(-53%);\n\n      + .hs-select-field__input {\n        -webkit-appearance: caret;\n        padding-left: calc(#{hs-core.primitive-token-get('padding.md')} + 30px);\n      }\n    }\n\n    .hs-select-field__helper {\n      @include hs-core.color-apply('select-field-helper', (\n        ink: $helper-ink,\n      ));\n      @include hs-core.typography-apply('select-field', (\n        family: 'small',\n        size: 'small',\n        weight: 'light',\n        line-height: 'broad'\n      ));\n    }\n  }\n}","//\n//  Copyright (c) 2023 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n//\n\n@use '../hs-core';\n@use 'sass:map';\n@use 'select-field-base';\n\n$fill: 'surface-200' !default;\n$fill-disabled: 'disabled' !default;\n$ink: 'surface-ink' !default;\n$ink-disabled: 'disabled-ink' !default;\n$border: $fill !default;\n$border-focus: 'accent-400' !default;\n$border-disabled: 'disabled' !default;\n\n$radius: 'small' !default;\n$padding: ('md' 'lg') !default;\n$border-width: 1px !default;\n$border-style: solid !default;\n\n$family: 'body' !default;\n$size: 'body' !default;\n$weight: 'normal' !default;\n$line-height: 'normal' !default;\n\n$label-ink: 'surface-ink' !default;\n$helper-ink: 'surface-ink' !default;\n\n$theme: () !default;\n\n$_fill: hs-core.prioritize(map.get($theme, 'fill'), $fill);\n$_fill-disabled: hs-core.prioritize(map.get($theme, 'fill-disabled'), $fill-disabled);\n$_ink: hs-core.prioritize(map.get($theme, 'ink'), $ink);\n$_ink-disabled: hs-core.prioritize(map.get($theme, 'ink-disabled'), $ink-disabled);\n$_border: hs-core.prioritize(map.get($theme, 'border'), $border);\n$_border-focus: hs-core.prioritize(map.get($theme, 'border-focus'), $border-focus);\n$_border-disabled: hs-core.prioritize(map.get($theme, 'border-disabled'), $border-disabled);\n\n$_radius: hs-core.prioritize(map.get($theme, 'radius'), $radius);\n$_padding: hs-core.prioritize(map.get($theme, 'padding'), $padding);\n$_border-width: hs-core.prioritize(map.get($theme, 'border-width'), $border-width);\n$_border-style: hs-core.prioritize(map.get($theme, 'border-style'), $border-style);\n\n$_family: hs-core.prioritize(map.get($theme, 'family'), $family);\n$_size: hs-core.prioritize(map.get($theme, 'size'), $size);\n$_weight: hs-core.prioritize(map.get($theme, 'weight'), $weight);\n$_line-height: hs-core.prioritize(map.get($theme, 'line-height'), $line-height);\n\n$_label-ink: hs-core.prioritize(map.get($theme, 'label-ink'), $label-ink);\n$_helper-ink: hs-core.prioritize(map.get($theme, 'helper-ink'), $helper-ink);\n\n@mixin render() {\n  @include select-field-base.init($_label-ink, $_helper-ink) {\n    .hs-select-field__input {\n      width: 100%;\n      @include hs-core.shape-apply('select-field', (\n        radius: $_radius,\n        padding: $_padding,\n        border-width: $_border-width,\n        border-style: $_border-style\n      ));\n      @include hs-core.typography-apply('select-field', (\n        family: $_family,\n        size: $_size,\n        weight: $_weight,\n        line-height: $_line-height\n      ));\n      & {\n        outline: none;\n      }\n      @include hs-core.prefix(appearance, none, ('moz', 'webkit'));\n      @include hs-core.prefix(transition, all var(--hs-transition-time) ease);\n\n      &:not(:disabled) {\n        @include hs-core.color-apply('select-field', (\n          fill: $_fill,\n          ink: $_ink,\n          border: $_border\n        ));\n\n        &:focus {\n          @include hs-core.color-bind('select-field', (\n            border: $_border-focus\n          ));\n        }\n      }\n\n      &:disabled {\n        @include hs-core.color-apply('select-field', (\n          fill: $_fill-disabled,\n          ink: $_ink-disabled,\n          border: $_border-disabled\n        ));\n      }\n    }\n\n    &:where(.is-required) {\n      .hs-select-field__label::after {\n        content: '*';\n        color: hs-core.token-get('error-400');\n        margin-left: hs-core.primitive-token-get('margin.xs');\n      }\n    }\n\n    &:where(.is-raised) {\n      .hs-select-field__input:not(:disabled) {\n        @include hs-core.shape-apply('select-field', (\n          shadow: 'low'\n        ));\n      }\n    }\n\n    &:where(.is-error) {\n      @include hs-core.color-bind('select-field', (ink: 'error-400'));\n      @include hs-core.color-bind('select-field-label', (ink: 'error-400'));\n      @include hs-core.color-bind('select-field-helper', (ink: 'error-400'));\n\n      .hs-select-field__input:not(:disabled) {\n        &:focus {\n          @include hs-core.color-bind('select-field', (\n            border: 'error-400'\n          ));\n        }\n      }\n\n      svg {\n        color: hs-core.token-get('error-400');\n      }\n    }\n\n    &:where(.is-side-label) {\n      flex-flow: row nowrap;\n      align-items: center;\n      gap: hs-core.primitive-token-get('spacing.sm');\n    }\n  }\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n\n@mixin init() {\n  .hs-tick-field {\n    display: flex;\n    flex-basis: 100%;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    transition: all var(--hs-transition-time) ease;\n    cursor: pointer;\n\n    @content;\n\n    .hs-tick-field__label {\n      @include hs-core.color-ink('tick-field-label', inherit);\n      @include hs-core.typography-apply('tick-field-label', (\n        family: inherit,\n        size: inherit,\n        weight: inherit,\n        line-height: inherit\n      ));\n    }\n\n    .hs-tick-field__input {\n      appearance: none;\n      transition: inherit;\n      cursor: inherit;\n\n      @include hs-core.shape-apply('tick-field-input', (\n        radius: 'pill',\n        border-width: 10px,\n        border-style: solid\n      ));\n\n      &[type='checkbox'] {\n        @include hs-core.shape-radius('tick-field-input', 'small', 'bind');\n      }\n    }\n\n    .hs-tick-field__helper {\n      @include hs-core.color-ink('tick-field-helper', inherit);\n      @include hs-core.typography-apply('tick-field-helper', (\n        family: inherit,\n        size: inherit,\n        weight: inherit,\n        line-height: inherit\n      ));\n    }\n\n    .hs-tick-field__sprite {\n      width: clamp(24px, 5vw, 32px);\n      height: clamp(24px, 5vh, 32px);\n    }\n  }\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n@use '../hs-button/button-shared' as shared;\n\n@use 'sass:map';\n\n@mixin init(\n  $fills,\n  $inks,\n  $borders,\n  $radius,\n  $padding\n) {\n  .hs-wallet {\n    width: 100%;\n    max-width: max-content;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    position: relative;\n\n    @content;\n\n    .hs-button:where(.is-wallet-button) {\n      @include shared.filled-style($fills, $inks, $borders);\n      @include hs-core.shape-bind('button', (\n        radius: $radius,\n        padding: $padding,\n        border-width: 1px,\n        border-style: solid,\n      ));\n    }\n\n    &:where(:not(.is-connected)) {\n      @include hs-core.key-bind('button-gap', 0 !important);\n      .hs-button__icon {\n        display: none;\n      }\n    }\n\n    &:where(.is-connected) {\n      .hs-button.is-wallet-button {\n        @include hs-core.key-bind('button-gap', 0.3rem);\n\n        .hs-button__icon {\n          background-color: hs-core.primitive-token-get('dp-green.400');\n          border: 6px solid hs-core.key-get('button-fill');\n          border-radius: 50%;\n        }\n\n        &:hover {\n          + .hs-wallet__details {\n            @include hs-core.key-bind('wallet-details-opacity', 1);\n          }\n        }\n      }\n\n      .hs-wallet__details {\n        display: block;\n        position: absolute;\n        bottom: calc(-90% - #{hs-core.primitive-token-get('spacing.xs')});\n        z-index: 100;\n        opacity: hs-core.key-create('wallet-details-opacity', 0);\n        pointer-events: none;\n        text-align: center;\n        white-space: nowrap;\n        box-sizing: border-box;\n        @include hs-core.prefix(transition, all var(--hs-transition-time) ease-in-out);\n\n        @include hs-core.color-apply('wallet-details', (\n          fill: map.get($fills, 'default'),\n          ink: map.get($inks, 'default'),\n          border: map.get($borders, 'default')\n        ));\n        @include hs-core.shape-apply('wallet-details', (\n          radius: $radius,\n          padding: $padding,\n          shadow: 'low',\n          border-width: 1px,\n          border-style: solid\n        ));\n        @include hs-core.typography-apply('wallet-details', (\n          family: 'small',\n          size: 'small',\n          weight: 'small',\n          line-height: 'small'\n        ));\n\n        @include hs-core.breakpoint-create('medium', 'max') {\n          display: none !important;\n          @include hs-core.key-bind('wallet-details-opacity', 0 !important);\n        }\n\n        &:where(.is-right) {\n          right: 0;\n        }\n\n        &:where(.is-left) {\n          left: 0;\n        }\n      }\n    }\n  }\n}","///\n//  Copyright (c) 2022 Matteu\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n\n@use '../feature';\n\n/// Stores all breakpoints of the design system. Reference for all mixins below\n/// @access private\n$_ds-breakpoint-registry: ();\n\n/// Validation for breakpoints.\n/// @access public\n$validation: true !default;\n\n/// Verifies a breakpoint.\n/// @param {string} $query\n/// @return {boolean} breakpoint verification.\n@function check($query) {\n  @return _is-registered-breakpoint($query, false);\n}\n\n/// Configures all the breakpoints to be used in the design system.\n/// @param {*} $breakpoints...\n/// @return {void} breakpoint configuration.\n@mixin config($map: (), $breakpoints...) {\n  @if not feature.is-empty($map) {\n    @each $key, $value in $map {\n      @if meta.type-of($value) == map {\n        @each $_key, $_value in $value {\n          @if $_key == 'default' {\n            @if meta.type-of($_value) == map {\n              @include config(('#{$key}': $_value))\n            } @else {\n              @include _register-breakpoint('#{$key}', $_value);\n            }\n          } @else {\n            @if meta.type-of($_value) == map {\n              @include config(('#{$key}-#{$_key}': $_value))\n            } @else {\n              @include _register-breakpoint('#{$key}-#{$_key}', $_value);\n            }\n          }\n        }\n      } @else {\n        @include _register-breakpoint($key, $value);\n      }\n    }\n  }\n\n  @if meta.keywords($breakpoints) {\n    @each $key, $value in meta.keywords($breakpoints) {\n      @if meta.type-of($value) == map {\n        @each $_key, $_value in $value {\n          @if $_key == 'default' {\n            @if meta.type-of($_value) == map {\n              @include config(('#{$key}': $_value))\n            } @else {\n              @include _register-breakpoint('#{$key}', $_value);\n            }\n          } @else {\n            @if meta.type-of($_value) == map {\n              @include config(('#{$key}-#{$_key}': $_value))\n            } @else {\n              @include _register-breakpoint('#{$key}-#{$_key}', $_value);\n            }\n          }\n        }\n      } @else {\n        @include _register-breakpoint($key, $value);\n      }\n    }\n  }\n}\n\n/// Creates a breakpoint for an element.\n/// @param {string} $query\n/// @param {string} $context\n/// @param {string} $property\n/// @return {*} breakpoint.\n@mixin create($query, $context: 'min', $property: 'width') {\n  $_valid-contexts: ('min', 'max');\n  $_valid-properties: ('width', 'height');\n\n  @if not list.index($_valid-contexts, $context) {\n    @error 'Invalid context: #{$context}. Expecting a valid context (#{$_valid-contexts}).';\n  }\n\n  @if not list.index($_valid-properties, $property) {\n    @error 'Invalid property: #{$property}. Expecting a valid property (#{$_valid-properties}).';\n  }\n\n  @media screen and (#{$context}-#{$property}: _sanitize-breakpoint($query, $context)) {\n    @content;\n  }\n}\n\n/// Gets a breakpoint from query.\n/// @param {string} $query\n/// @return {int|null} breakpoint.\n@function get($query) {\n  @if _is-registered-breakpoint($query) {\n    @return map.get($_ds-breakpoint-registry, $query);\n  }\n  @if not $validation {\n    @return map.get($_ds-breakpoint-registry, $query);\n  }\n}\n\n/// Retrieves the entire breakpoint registry.\n/// @param {list<string>} $targets\n/// @return {map} map of tokens.\n@function registry-get($targets: 'all') {\n  @if not feature.is-empty($targets) {\n    $targeted-tokens: ();\n    @each $target in $targets {\n      @each $key, $value in $_ds-breakpoint-registry {\n        @if string.index($key, $target) == 1 {\n          $targeted-tokens: map.set($targeted-tokens, $key, $value);\n        }\n      }\n    }\n    @return $targeted-tokens;\n  }\n\n  @if $targets == 'all' {\n    @return $_ds-breakpoint-registry;\n  }\n\n  @return $_ds-breakpoint-registry;\n}\n\n/// Registers a breakpoint to the registry.\n/// @param {string} $key\n/// @param {int} $value\n/// @return {void} register breakpoint.\n@mixin _register-breakpoint($key, $value) {\n  $_ds-breakpoint-registry: map.set($_ds-breakpoint-registry, $key, $value) !global;\n}\n\n/// Validates a query if it's a registered token or not.\n/// @access private\n/// @param {string} $query\n/// @return {boolean|error} is registered token\n@function _is-registered-breakpoint($query, $errors: $validation) {\n  @if not list.index(map.keys($_ds-breakpoint-registry), $query) {\n    @if $errors {\n      @error 'Invalid breakpoint: #{$query}. Please use a valid registered breakpoint: #{map.keys($_ds-breakpoint-registry)}';\n    } @else {\n      @return false;\n    }\n  } @else {\n    @return true;\n  }\n}\n\n/// Cleans a breakpoint based on a given context.\n/// @access private\n/// @param {string} $query\n/// @param {string} $context\n/// @return {*} clean breakpoint.\n@function _sanitize-breakpoint($query, $context) {\n  @if not $context == 'min' or not $context == 'max' {\n    @error 'Invalid context: #{$context}. Please select from the following valid contexts: min, max.';\n  } @else if $context == 'min' {\n    @return get($query);\n  } @else if $context == 'max' {\n    @return get($query) - 1;\n  }\n}","///\n//  Copyright (c) 2022 Dev Protocol\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n///\n\n@use '../hs-core';\n@use 'sass:list';\n@use 'sass:string';\n@use 'util-helpers' as helper;\n\n$_families: (\n  'supertitle',\n  'title',\n  'subtitle',\n  'body',\n  'mono',\n  'small'\n);\n\n$_sizes: (\n  'xs',\n  'sm',\n  'md',\n  'lg',\n  'xl',\n  '2xl',\n  '3xl',\n  '4xl',\n  '5xl',\n  '6xl',\n);\n\n$_weights: (\n  'black',\n  'bold',\n  'normal',\n  'light'\n);\n\n$_line-heights: (\n  'broad',\n  'normal',\n  'condensed'\n);\n\n$_breakpoints: (\n  'small': 'sm',\n  'medium': 'md',\n  'large': 'lg',\n  'xlarge': 'xl',\n);\n\n$_alignments: (\n  'left',\n  'center',\n  'right',\n  'justify'\n);\n\n@mixin typography-utils($include: (), $exclude: ()) {\n  @include typography($include, $exclude);\n}\n\n@mixin typography($include: (), $exclude: ()) {\n  $utils-to-render: helper.handle-include-exclude((\n    'preset',\n    'family',\n    'size',\n    'weight',\n    'lh',\n    'text-align'\n  ), $include, $exclude);\n\n  @if list.index($utils-to-render, 'preset') {\n    @each $preset in $_families {\n      .#{$preset} {\n        font-family: hs-core.token-get('#{$preset}-family');\n        font-size: hs-core.token-get('#{$preset}-size');\n        font-weight: hs-core.token-get('#{$preset}-weight');\n        line-height: hs-core.token-get('#{$preset}-line-height');\n      }\n\n      @each $breakpoint, $shorthand in $_breakpoints {\n        @include hs-core.breakpoint-create($breakpoint) {\n          .\\@#{$shorthand}\\:#{$preset} {\n            font-family: hs-core.token-get('#{$preset}-family');\n            font-size: hs-core.token-get('#{$preset}-size');\n            font-weight: hs-core.token-get('#{$preset}-weight');\n            line-height: hs-core.token-get('#{$preset}-line-height');\n          }\n        }\n      }\n    }\n  }\n\n  @if list.index($utils-to-render, 'family') {\n    @each $preset in $_families {\n      .family-#{$preset} {\n        font-family: hs-core.token-get('#{$preset}-family');\n      }\n\n      @each $breakpoint, $shorthand in $_breakpoints {\n        @include hs-core.breakpoint-create($breakpoint) {\n          .\\@#{$shorthand}\\:family-#{$preset} {\n            font-family: hs-core.token-get('#{$preset}-family');\n          }\n        }\n      }\n    }\n  }\n\n  @if list.index($utils-to-render, 'size') {\n    @each $size in $_sizes {\n      .size-#{$size} {\n        font-size: hs-core.primitive-token-get('size.#{$size}');\n      }\n\n      @each $breakpoint, $shorthand in $_breakpoints {\n        @include hs-core.breakpoint-create($breakpoint) {\n          .\\@#{$shorthand}\\:size-#{$size} {\n            font-size: hs-core.primitive-token-get('size.#{$size}');\n          }\n        }\n      }\n    }\n  }\n\n  @if list.index($utils-to-render, 'weight') {\n    @each $preset in $_weights {\n      .weight-#{$preset} {\n        font-weight: hs-core.primitive-token-get('weight.#{$preset}');\n      }\n\n      @each $breakpoint, $shorthand in $_breakpoints {\n        @include hs-core.breakpoint-create($breakpoint) {\n          .\\@#{$shorthand}\\:weight-#{$preset} {\n            font-weight: hs-core.primitive-token-get('weight.#{$preset}');\n          }\n        }\n      }\n    }\n  }\n\n  @if list.index($utils-to-render, 'lh') {\n    @each $preset in $_line-heights {\n      .lh-#{$preset} {\n        line-height: hs-core.primitive-token-get('line-height.#{$preset}');\n      }\n\n      @each $breakpoint, $shorthand in $_breakpoints {\n        @include hs-core.breakpoint-create($breakpoint) {\n          .\\@#{$shorthand}\\:lh-#{$preset} {\n            line-height: hs-core.primitive-token-get('line-height.#{$preset}');\n          }\n        }\n      }\n    }\n  }\n\n  @if list.index($utils-to-render, 'text-align') {\n    @each $preset in $_alignments {\n      .text-align-#{$preset} {\n        text-align: string.unquote($preset);\n      }\n\n      @each $breakpoint, $shorthand in $_breakpoints {\n        @include hs-core.breakpoint-create($breakpoint) {\n          .\\@#{$shorthand}\\:text-align-#{$preset} {\n            text-align: string.unquote($preset);\n          }\n        }\n      }\n    }\n  }\n}"]}