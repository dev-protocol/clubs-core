---
import { Admin } from '../../../../src/layouts'
import { adminFactory, encode } from '../../../../src/'
import example from '../../../../example/index'
import theme from '../../../../example/theme'
import theme2 from '../../../../example/theme2'

export const { getStaticPaths } = adminFactory({
	config: () =>
		encode({
			name: 'Debug',
			twitterHandle: '@debug',
			description: '',
			url: '',
			propertyAddress: '0xE8FCe1957bbaDb79C39E04dFf81782E892A22b9d',
			chainId: 80001,
			rpcUrl: 'https://polygon-mumbai-bor.publicnode.com',
			adminRolePoints: 0,
			adminPageVisibility: 'public',
			options: [],
			plugins: [
				{ id: 'theme', options: [] },
				{ id: 'theme2', options: [], enable: false },
				{ id: 'example', options: [] },
			],
		}),
	plugins: [theme, theme2, example],
})

const Content = Astro.props.component

console.log(Astro.props)

console.log('props.slots', Astro.props.clubs.slots)
---

<Admin {...Astro.props}>
	<div slot="admin:sidebar:before-title">
		<p>
			Injected contents<br /><span class="text-xs"
				>admin:sidebar:before-title</span
			>
		</p>
	</div>
	<div slot="admin:sidebar:before-overview-link">
		<p>
			Injected contents<br /><span class="text-xs"
				>admin:sidebar:before-overview-link</span
			>
		</p>
	</div>
	<div slot="admin:sidebar:before-theme-link">
		<p>
			Injected contents<br /><span class="text-xs"
				>admin:sidebar:before-theme-link</span
			>
		</p>
	</div>
	<div slot="admin:sidebar:after-built-in-primary-links">
		<p>
			Injected contents<br /><span class="text-xs"
				>admin:sidebar:after-built-in-primary-links</span
			>
		</p>
	</div>
	<div slot="admin:sidebar:before-footer">
		<p>
			Injected contents<br /><span class="text-xs"
				>admin:sidebar:before-footer</span
			>
		</p>
	</div>
	<div slot="admin:sidebar:after-footer">
		<p>
			Injected contents<br /><span class="text-xs"
				>admin:sidebar:after-footer</span
			>
		</p>
	</div>

	<Content {...Astro.props} />
</Admin>

<script>
	import { onSubmitConfig } from '../../../../src'

	onSubmitConfig((data, onFinish) => {
		console.log('onSubmitConfig', data)
		setTimeout(() => onFinish({ success: true }), 1000)
	})
</script>
