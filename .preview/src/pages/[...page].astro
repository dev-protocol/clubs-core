---
import '../styles/global.css'
import {
	pageFactory,
	encode,
	type ClubsFunctionPageFactoryResult,
	type ClubsFunctionFactoryOptions,
	routerFactory,
	ClubsGetStaticPathsItem,
} from '../../../src/'
import example from '../../../example/index'
import theme from '../../../example/theme'
import type { InferGetStaticPropsType } from 'astro'
import { UndefinedOr } from '@devprotocol/util-ts'

const { page } = Astro.params
const options = {
	config: () =>
		encode({
			name: 'Debug',
			twitterHandle: '@debug',
			description: '',
			url: '',
			propertyAddress: '',
			chainId: 167,
			rpcUrl: '',
			adminRolePoints: 0,
			options: [],
			plugins: [
				{ id: 'theme', options: [] },
				{ id: 'example', options: [] },
			],
		}),
	plugins: [theme, example],
} satisfies ClubsFunctionFactoryOptions

const { getStaticPaths } = pageFactory(
	options
) as ClubsFunctionPageFactoryResult<typeof options>

const router = routerFactory(await getStaticPaths(), (p) => p.params.page)
const path = router(page) as UndefinedOr<
	ClubsGetStaticPathsItem<InferGetStaticPropsType<typeof getStaticPaths>>
>

const Content = path?.props.component
const Layout = path?.props.layout
---

{
	Layout && Content && (
		<Layout {...path.props}>
			<Content {...path.props} />
		</Layout>
	)
}
